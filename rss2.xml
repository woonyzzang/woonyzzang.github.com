<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>J Dev</title>
    <link>https://woonyzzang.github.com/</link>
    
    <atom:link href="https://woonyzzang.github.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>FrontEnd Dev</description>
    <pubDate>Mon, 10 Jun 2024 09:07:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>CQRS 패턴을 Redux 와 비교</title>
      <link>https://woonyzzang.github.com/2024/06/03/redux-cqrs-pattern/</link>
      <guid>https://woonyzzang.github.com/2024/06/03/redux-cqrs-pattern/</guid>
      <pubDate>Mon, 03 Jun 2024 08:50:37 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;CQRS-패턴을-Redux-와-비교&quot;&gt;&lt;a href=&quot;#CQRS-패턴을-Redux-와-비교&quot; class=&quot;headerlink&quot; title=&quot;CQRS 패턴을 Redux 와 비교&quot;&gt;&lt;/a&gt;CQRS 패턴을 Redux 와 비교&lt;/h3&gt;&lt;p&gt;CQ</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="CQRS-패턴을-Redux-와-비교"><a href="#CQRS-패턴을-Redux-와-비교" class="headerlink" title="CQRS 패턴을 Redux 와 비교"></a>CQRS 패턴을 Redux 와 비교</h3><p>CQRS 패턴과 Redux 패턴의 플로우를 비교해 보면 크게 다르지 않다라는걸 알 수 있다.</p><table><thead><tr><th>CQRS</th><th>Redux</th></tr></thead><tbody><tr><td><img src="/images/redux-cqrs-pattern/redux-cqrs-pattern1.png"></td><td><img src="/images/redux-cqrs-pattern/redux-cqrs-pattern1.png"></td></tr></tbody></table><h3 id="커맨드-모델"><a href="#커맨드-모델" class="headerlink" title="커맨드 모델:"></a>커맨드 모델:</h3><p>Mutation(변이) 위한 Request (동작을 수행하고 상태 변경을 일으킴)</p><ul><li>리덕스에서는 액션 디스패치 개념과 동일 (액션을 디스패치 하게 되다면 새로운 커맨드를 서브밋 하게 된다.)</li></ul><p><strong>CQRS (Commands)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">addPost(&#123;</span><br><span class="line">  title: string,</span><br><span class="line">  body: string</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>Redux (Action)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addPost = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;ADD_POST&#x27;</span>,</span><br><span class="line">  <span class="attr">payload</span>: &#123;</span><br><span class="line">    <span class="attr">title</span>: string,</span><br><span class="line">    <span class="attr">body</span>: string</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="쿼리-모델"><a href="#쿼리-모델" class="headerlink" title="쿼리 모델:"></a>쿼리 모델:</h3><p>실제 데이터를 fetch 를 하는 동작</p><ul><li>리덕스에서는 셀렉터 역할과 동일</li></ul><p><strong>CQRS (Query)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listPost(): Array&lt;Post&gt;</span><br></pre></td></tr></table></figure><p><strong>Redux (Selector)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> listPost = <span class="title function_">useSelector</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">posts</span>);</span><br></pre></td></tr></table></figure><h3 id="도메인-이벤트"><a href="#도메인-이벤트" class="headerlink" title="도메인 이벤트:"></a>도메인 이벤트:</h3><p>변화를 일으키는 행위의 자체</p><ul><li>리덕스에서는 액션과 동일하나 리듀서에서 처리된 이후의 이벤트라고 불릴 수 있다.</li></ul><p><strong>CQRS (Domain Events)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Event(&#123;</span><br><span class="line">  type: PostAdded,</span><br><span class="line">  data: &#123;</span><br><span class="line">    id: string,</span><br><span class="line">    title: string,</span><br><span class="line">    body: string</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>Redux (Action)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addPost = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;ADD_POST&#x27;</span>,</span><br><span class="line">  <span class="attr">payload</span>: &#123;</span><br><span class="line">    <span class="attr">title</span>: string,</span><br><span class="line">    <span class="attr">body</span>: string</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="어그리게이션"><a href="#어그리게이션" class="headerlink" title="어그리게이션:"></a>어그리게이션:</h3><p>DDD 에서 메인 패턴, 모델의 작은 조각을 표현</p><ul><li>리덕스에서는 리듀서의 역할이라고 볼 수 있다.</li></ul><p><strong>CQRS (Aggregate)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> abstact <span class="keyword">class</span> <span class="title class_">Aggregate</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">public</span> Guid Id &#123; get; <span class="keyword">protected</span> set; &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ApplyEvent</span><span class="params">(Event e)</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">eventType</span> <span class="operator">=</span> e.GetType();</span><br><span class="line">    <span class="type">var</span> <span class="variable">handler</span> <span class="operator">=</span> GetType()</span><br><span class="line">      .GetMethod(“Apply”, <span class="keyword">new</span>[] &#123;eventType&#125;);</span><br><span class="line">    handler.Invoke(<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">object</span>[] &#123;e&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">protected</span> List&lt;Event&gt; NewEvents &#123; get; <span class="keyword">private</span> set; &#125;</span><br><span class="line">  <span class="keyword">public</span> Event[] GetNewEvents() =&gt; NewEvents.ToArray();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Redux (Reducer)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">reducer</span>(<span class="params">state, action</span>) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.<span class="property">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;INCREMENT&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> state + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;DECREMENT&#x27;</span>:</span><br><span class="line">      <span class="keyword">return</span> state - <span class="number">1</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h3><ul><li><a href="https://www.youtube.com/watch?v=FeDBlSBPUz8">https://www.youtube.com/watch?v=FeDBlSBPUz8</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Web/">Web</category>
      
      <category domain="https://woonyzzang.github.com/categories/Web/Architecture/">Architecture</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/architecture/">architecture</category>
      
      <category domain="https://woonyzzang.github.com/tags/ddd/">ddd</category>
      
      <category domain="https://woonyzzang.github.com/tags/cqrs/">cqrs</category>
      
      
      <comments>https://woonyzzang.github.com/2024/06/03/redux-cqrs-pattern/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Frontend MVC 패턴</title>
      <link>https://woonyzzang.github.com/2024/05/30/frontend-mvc-pattern/</link>
      <guid>https://woonyzzang.github.com/2024/05/30/frontend-mvc-pattern/</guid>
      <pubDate>Thu, 30 May 2024 07:17:00 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;프론트엔드에서-MVC-패턴을-사용-안하는-이유&quot;&gt;&lt;a href=&quot;#프론트엔드에서-MVC-패턴을-사용-안하는-이유&quot; class=&quot;headerlink&quot; title=&quot;프론트엔드에서 MVC 패턴을 사용 안하는 이유&quot;&gt;&lt;/a&gt;프론트엔드에서 MVC</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="프론트엔드에서-MVC-패턴을-사용-안하는-이유"><a href="#프론트엔드에서-MVC-패턴을-사용-안하는-이유" class="headerlink" title="프론트엔드에서 MVC 패턴을 사용 안하는 이유"></a>프론트엔드에서 MVC 패턴을 사용 안하는 이유</h3><p>프론트엔드에서 MVC 패턴을 대체하는 패턴들과 등장 배경 이유를 알아보자.</p><p><strong>백엔드에서의 수행 절차</strong></p><ol><li>client 의 <strong>request</strong> 를 받는다. (브라우저 or 앱)</li><li>request 를 분석한다. (라우팅)</li><li>필요한 데이터를 수집 <strong>&#x2F;</strong> 가공 한다. (데이터 베이스 조회)</li><li>뷰를 생성하고 response 한다.</li></ol><h3 id="플로우"><a href="#플로우" class="headerlink" title="플로우"></a>플로우</h3><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern1.png"></p><p>컨트롤러 → 모델 → 뷰 → 컨트롤러가 이렇게 흐름상 하나의 흐름으로 이어진다고 볼 수 있다.<br>이 결과 문제는 각각의 레이어들 사이에 강한 의존성이 생기는 문제가 존재 한다.</p><p>그래서 이부분에 대해 실제 MVC 에서는 동작은 아래와 같이 진행된다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern2.png"></p><p>이런식으로 Controller 가 Model 을 통해서 데이터를 수집하고, 가공하는걸 부탁해서 받아온 다음에 그 Model 정보를 다시 View 에 전달을 해준다. 물론 View 에 전달을 할 때 Model 객체를 넣어주는 경우도 있다.</p><p>들여다 보면 model 과 View 간에 어느 정도 의존성을 완전히 없애지는 못하지만 중간계층에 컨트롤러가 많은 역할을 해서 Model 과 View 컨트롤을 많이 하는 경우가 있다.</p><p><strong>Controller 예)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model = <span class="keyword">new</span> <span class="title class_">Model</span>();</span><br><span class="line">view = <span class="keyword">new</span> <span class="title class_">View</span>(model);</span><br><span class="line">view.<span class="title function_">makeHTML</span>();</span><br></pre></td></tr></table></figure><p>이렇게 백엔드에서는 MVC 패턴이 굉장히 유용한데, 프론트엔드 에서도 소프트웨어 개발 관점에서 이걸 그대로 쓸 수 있지 않을까? 란 생각을 하게 된다.</p><p>프론트엔드 SPA 개발 관점으로 보면 아래와 같을 것이다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern3.png"></p><p>SPA 에서는 URL 이 여러 개가 존재할 수가 있다. URL 이 존재하는데 페이지는 전환이 되지 않고 컨텐츠 내용만 업데이트 되는 형식이다.</p><p>서버에서 리퀘스트 정보를 받아서 처리하는 컨트롤러를 생각해보면 그거와 굉장히 유사한 일을 클라이언트에서도 한다고 볼 수 있다.</p><p>그래서 URL 을 분석하는 일들을 좀 할 수가 있다. 사용자가 입력한 URL 분석을 해서 그거에 따라서 어느 부분을 렌더링 해주는 역할을 할 수가 있다.<br>이것만 봐서는 백엔드의 처리와 거의 비슷한 역할을 프론트엔드 에서도 한다는 걸을 알 수가 있고그러다 보면 MVC 를 쉽게 적용해서 그래로 활용할 수 있을 것이라고 생각을 할 수가 있다.</p><p>하지만 현실을 그렇지 않은 경우가 더 많다. View 단은 복잡하게 구성되어지게 되기 때문인데..</p><p>10 년 훨씬 전부터 프론트엔드는 복잡한 View 가 많아졌다.</p><ul><li>카카오 맵</li><li>구글 시트</li><li>포털 사이트</li><li>쇼핑 사이트</li><li>기타 등등</li></ul><p>페이지 전환 없이 여러가지 렌더링 일을 하는 싱글 페이지 어플리케이션이 많아지고 있고, 이 부분은 당연히 기술이 발달함에 있어 브라우저에서 CSS, JS 로 이전 보다 표현 및 기능 들이 처리 가능해졌기 때문..</p><p>다시 본론으로 와서 보면… 사실 프론트엔드는 그 자체가 View 이다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern4.png"></p><p>그래서 사실은 MVC 같은 패턴이 필요한게 아니고, 그냥 View 대한 처리가 필요한 걸 수도 있다.</p><p>보통 백엔드 관점에서의 View 를 어떤식으로 얘기하는가를 보면</p><blockquote><p>보통 MVC 에서는 View 는 만들어지는 결정체 일뿐…</p></blockquote><p>컨트롤러가 입력을 받고 그 다음 모델에서 데이터를 조회&#x2F;가공하고 클라이언트에 줄 Response 할 View 를 만드는 것.</p><p>거기에 반해 프론트엔드의 View 는 아무래도 다르다. 다시 말하자면 프론트엔드에서의 View 는 <strong>온갖 이벤트</strong>가 발생한다.</p><p>즉, 백엔드 관점의 View 개념 처럼 가만히 있는 View 가 아니라, View 가 바로 메인이자 컨트롤러와 같은 일을 할 수 밖에 없는 상황이 생기게<br>되는 것이다. 그러다보니 문제의 진입점이 굉장히 다양하게 되어 버린다.</p><p>실제로 View 에서 일어나는 일들을 살펴보면</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern5.png"></p><p>이처럼 View 안에서 여러가지 일들이 있다.</p><p>이런 프론트엔드 특성을 Model 과 View 관계로 정리해 본다면</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern6.png"></p><p>입력 값을 통해 Model 이 변경 된다.</p><p>이와 반대의 케이스의 경우도 있다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern7.png"></p><p>모델의 변경, 즉 서버로 받은 데이터 또는 어떤 주기적으로 데이터를 생성하는 일이 생긴다거나 그럴 때 View 를 바꿔야 되는 경우도 있다.</p><p>그러면 결국 View 와 Model 이 양쪽으로 복잡한 관계가 될 거라는 예상을 할 수 있을 것이다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern8.png"></p><p>이런걸 양방향 이라고 볼 수 있는데, 결국 이런 양방향의 문제가 프론트엔드에서는 상당히 복잡도를 올린다고 볼 수 있다.<br>그리고 한가지 더 프론트엔드 상황을 보면 View 는 아주 많다는 것이다.</p><p>View 를 하나만 만들 수도 있지만, 그렇게 되면 View 가 너무 커지게 되어 버린다.<br>그래서 View 를 컴포넌트로 단위로 쪼개서 나누게 된다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern9.png"></p><p>그러다 보면 View 와 Model 이 양방향으로 데이터를 교환하는 것이데… View 도 엄청 많고 또 흔한 경우는 아니지만 그에 따른 모델도 굉장히 다수의 모델이 존재할 수가 있게 되어 버린다.</p><p>그럼 어떻게 되는 것인가?</p><p>결국 서로 간에 의존성이 많아지게 되고 View 와 Model 간의 복잡도가 훨씬 더 올라가게 되어 버린다. View 하고 Model 중 어디서 어디로 호출 하는지 굉장히 혼란스럽게 된다. 더구나 Model, View 가 서로 엄청 호출한다. 그래서 강한 의존성도 생기게 되고…</p><p>이 문제를 해결하기 위해 당연히 MVC 에 Controller 역할을 하나 만들어 주면 되지 않을까 생각해 볼 수 있다.</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern10.png"></p><p>하지만 Controller 는 복잡한 View 와 model 을 끌어 안고 있기 때문에 슈퍼 울트라 컨트롤러 같은 역할의 Controller 가 될 수 밖에 없는 것이다.<br>컨트롤러가 굉장히 비대해지는…</p><p>여기서 또 하나의 프론트엔드의 View 특징을 알아본다면</p><p><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern11.png"></p><p>View 는 계층적인 구조를 가지는게 필요하다.</p><p>컴포넌트로 잘게 쪼개서 나누었을때 View 는 어떻게 보면 결국 DOM 이란걸 브라우저에 렌더링 해서 표현하는 것이다.</p><p>DOM 은 트리 구조로 되어 있다. 따라서 View 영역도 DOM 만큼 잘게 나누지는 않지만 어느 정도 트리 구조를 가지면서 이를 제어 해야 된다.<br>왜냐하면 View 는 잦은 리렌더링으로 다시 렌더링 되는 경우가 많이 있기 때문이며, 이를 제어하기 위해서는 이 계층적인 것을 원래의 (DOM) 구조를 활용하면서 리렌더링을 최소화 해주는 그런 방법들을 찾아야 한다.</p><p>프론트엔드에서 가장 비싼 비용에 속한 부분 중 하나가 DOM 변경이 해당 되며 가장 느린 작업 이기 때문이다. 그렇기 때문에 하나의 큰 덩어리 구조가 아닌 어느정도 계층적인 구조를 만들어서 렌더링 효율성을 얻어야 되는 것이다.</p><p><strong>정리</strong></p><ul><li>View 가 아주 많다</li><li>양방향 처리가 필요하다.</li><li>슈퍼 울트라 컨트롤러가 생긴다</li><li>View 간의 계층처리가 필요하다.</li></ul><p><strong>그래서 , 필요한 것은?</strong></p><ul><li>복잡한 View, Model 관계 단순화.</li><li>View 계층 처리로 쉽고 효율적인 DOM 처리.</li></ul><p>백엔드의 MVC 패턴으로 프론트엔드 적용해서 이와 같은 문제를 해결 할 수 있는가….<br>결론적으로 적합 하지 않다고 볼 수 있다.</p><p>그렇기에 현재 프론트엔드에서 사용되는 주요 기술들은</p><ul><li>데이터 바인딩 (렌더 자동화)</li><li>MVVM 패턴 (Vue.js)</li><li>Flux 아키텍처 (React.js)</li></ul><p>등을 등장 되어 사용되며 앞서 설명했던 문제들을 잘 해결해 주고 있다.</p><table><thead><tr><th>MVVM 패턴</th><th>Flux 패턴</th></tr></thead><tbody><tr><td><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern12.png"></td><td><img src="/images/frontend-mvc-pattern/frontend-mvc-pattern13.png"></td></tr></tbody></table><p>이처럼 프론트엔드에서의 View 는 많은 특성이 있다.</p><p>View 자체가 엄청 많고 그에 따른 인터렉션을 제어하는 이벤트들도 많다. 따라서 백엔드에서 사용하는 MVC 패턴보다 더 나은 선택이 필요하<br>기 때문에 MVVM, Flux 등의 과 같은 패턴들을 채택하게 되어서 사용 되어지고 인기를 얻고 있는 이유 일 것 이다.</p><h3 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h3><ul><li><a href="https://www.youtube.com/watch?v=Y5vOfv67h8A">https://www.youtube.com/watch?v=Y5vOfv67h8A</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Web/">Web</category>
      
      <category domain="https://woonyzzang.github.com/categories/Web/Architecture/">Architecture</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/architecture/">architecture</category>
      
      <category domain="https://woonyzzang.github.com/tags/mvc/">mvc</category>
      
      <category domain="https://woonyzzang.github.com/tags/mvvm/">mvvm</category>
      
      
      <comments>https://woonyzzang.github.com/2024/05/30/frontend-mvc-pattern/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>도메인 로직 이해</title>
      <link>https://woonyzzang.github.com/2024/05/24/domain-logic/</link>
      <guid>https://woonyzzang.github.com/2024/05/24/domain-logic/</guid>
      <pubDate>Fri, 24 May 2024 06:55:59 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;비즈니스-로직-도메인-로직-이해&quot;&gt;&lt;a href=&quot;#비즈니스-로직-도메인-로직-이해&quot; class=&quot;headerlink&quot; title=&quot;비즈니스 로직&amp;#x2F;도메인 로직 이해&quot;&gt;&lt;/a&gt;비즈니스 로직&amp;#x2F;도메인 로직 이해&lt;/h3&gt;&lt;p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="비즈니스-로직-도메인-로직-이해"><a href="#비즈니스-로직-도메인-로직-이해" class="headerlink" title="비즈니스 로직&#x2F;도메인 로직 이해"></a>비즈니스 로직&#x2F;도메인 로직 이해</h3><p>개발 아키텍처에서 말하는 비즈니스 로직&#x2F;도메인 로직 이해를 하려면 </p><p>도메인 로직인지 아닌지 판단 기준을</p><p><code>&quot;이 코드가 현실문제에 대한 의사 결정을 하고 있는가?&quot;</code> 로 접근하면 개념을 이해하기가 쉬울 것이다.</p><p>개발하면서 자주 듣는 말…</p><blockquote><p>“비지니스 로직을 분리하세요.”<br>“도메인 로직은 다른 계층에 의존해서는 안됩니다.”</p></blockquote><p><code>도메인</code>, <code>비지니스</code> 이란 단어는 일반적인 일상에서의 이해하고 쓰는 개념으로 접근하면 도메인은 주소? 비지니스는 사업? 으로 풀이해서 접근 해볼 수 있는데, 소프트웨어 공학에서 사용하는 도메인, 비지니스란 용어의 개념은 조금 다르다.</p><p>소프트웨어가 풀고자 하는 <strong>‘현실 세상의 문제’</strong> 를 가르키는 말로 풀이 될 수 있다.</p><p>이 개념을 바탕으로 예를 들어 도메인이 무엇인가로 접근해본다면</p><p><strong>[은행 앱]</strong></p><p>아래 리스트는 은행 앱이라는 소프트웨어가 가지고 있는 도메인이라고 볼 수 있다.</p><ul><li>이자율</li><li>잔액</li><li>출금</li><li>계좌 개설</li><li>계좌 해지</li></ul><p>은행 앱이 해결하려는 현실의 문제는 고객의 금융업무를 처리해주는 것이기 때문이다.</p><p><strong>[틱톡]</strong></p><p>아래 리스트는 틱톡 앱이라는 소프트웨어가 가지고 있는 도메인이라고 볼 수 있다.</p><ul><li>영상 편집</li><li>제목 수정</li><li>댓글 조회</li><li>공유</li></ul><p>다시 말해 이 코드는 도메인 로직 이다 또는 이 코드는 비지니스 로직이다 라고 할 때, 그 뜻은 <u>이 코드가 <strong>현실 세상의 문제</strong>에 대해서 결정</u>을 하고 있다라는 뜻 이다.</p><p>그럼 의문이 들 수 있는게 소프트웨어는 결국 다 현실의 문제를 해결하는거 아닌가? 라고 이렇게 생각할 수도 있다.</p><p>그치만 은행 앱이나 SMS 앱의 코드를 한 줄 한 줄 뜯어보게 되면 실제 현실 세계의 대한 결정 말고도 굉장히 많은 코드들을 써야 한다 라는 것을 알 수 있다.</p><ul><li>데이터 베이스 연결하기</li><li>백엔드 서버에 API 호출하기</li><li>수많은 은행 고객 데이터를 효율적으로 적용하기</li><li>고화질 동영상을 캐싱해서 빠르게 로딩하기</li><li>화면이 밑에서 떠오르는 애니메이션 UI 추가하기</li></ul><p>이런것들은 도메인 로직에 해당되지 않으며 <strong>어플리케이션 서비스 로직 (비지니스 로직)</strong> 이라고 볼 수 있다.</p><p>이 코드가 현실 세상의 문제에 대해서 결정하고 있는가로 접근해서 접근하고 있으면 도메인 로직에 해당 될 수 있는 거고 나머지들은 그 결정을 위한 입력값을 만들어 주거나 그 결정의 결과물을 보여주고 전파하는 코드인 거라고 보면 된다.</p><p>구체적인 예를 들어 모바일 송금 앱 이라는 서비스가 있다고 가정하고 아래 예시 중 어떤것이 도메인 로직이고 어떤것이 서비스 로직에 해당 될 수 있을까 판단해 보자.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">송금을 담당하는 코드를 생각해 보면 대략 6 가지 단계로 나눠 볼 수 있다.</span><br><span class="line"></span><br><span class="line">1. 계좌의 잔액이 충분한지 확인 한다. (도메인 로직)</span><br><span class="line">   a. 송금이 가능한지에 대한 의사 결정하는 것</span><br><span class="line">2. 송금 버튼을 활성화하거나, 유효하지 않다면 에러 메시지를 띄운다. (서비스 로직)</span><br><span class="line">   a. UI 로직에 해당.</span><br><span class="line">3. 사용자의 멤버십 등급에 맞춰서 송금 수수료를 계산 한다. (도메인 로직)</span><br><span class="line">   a. 송금에 드는 비용을 수수료 정책이나 멤버십 정책에 따라서 결정하는 것</span><br><span class="line">4. 계산한 송금 수수료를 결제 하도록 회부 서비스에 요청 한다. (서비스 로직)</span><br><span class="line">   a. 외부 서비스와의 네트워킹에 해당.</span><br><span class="line">5. 수수료와 송금액만큼 사용자의 잔액을 감소 시킨다. (도메인 로직)</span><br><span class="line">   a. 사용자의 잔액에서 수수료와 송금액 만큼을 빼서 잔액을 감소 시킨다.</span><br><span class="line">   b. 이제 송금 후 이제 얼마인지를 계산하는 것</span><br><span class="line">6. 사용자의 잔액을 **DB** 에 저장 한다. (서비스 로직)</span><br><span class="line">   a. DB와 관련된 영속성 로직에 해당.</span><br></pre></td></tr></table></figure><p>도메인 로직에 해당 되는 단계를 살펴보면…<br>이 코드들은 송금이라는 현실 세계의 문제에 대한 의사 결정을 담당하고 있다.</p><p>서비스 로직에 해당 되는 단계를 살펴보면…<br>도메인 로직이 의사결정을 할 수 있도록 입력을 제공하거나 그 결과를 외부 서비스, DB, UI 등에 업데이트 하는 역할을 맡는다.</p><p>실제로는 깔끔하게 구분되어 지지 않는 경우가 훨씬 더 많다. 어떤 코드를 봤는데 도메인 로직인지 서비스 로직인지 애매하면 대부분 그 둘이 섞여 있는 경우가 높을 것이다. 이럴 경우 함수로 명확하게 구분짓고 나누어서 해결 해 볼 수 있을 것이다.</p><p>이렇게 도메인 로직과 서비스 로직 이 둘을 구분 하게 되면 테스트를 해야 될 것과 안해야 될 것이 명확하게 분리 될 수 있어 테스트 가성비도 올라가게 된다.</p><p><img src="/images/domain-logic/domain-logic1.png"></p><p>그리고 결과적으로 개발자가 도메인 로직을 이해하기 쉬워지게 된다. 왜냐하면 UI, DB 같은 기술적인 구현사항에 신경쓰지 않고 현실 세계의 의사결정을 잘 반영하고 있는지 그 정책에 대해서만 이해를 할 수가 있다.</p><p>실제로 비지니스 정책이 변경되게 될 경우, 소프트웨어를 변경하고 기능을 추가하는 것도 굉장히 편해지게 된다.</p><p>도메인 로직과 서비스 로직의 구분은 결국 서비스 개발함에 있어 나쁜 아키텍처를 만들지 않기 위해서 꼭 필요한 내용 일 것이다. 그렇기에 이런 개념을 잘 잡고 가는게 좋다.</p><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><ul><li><a href="https://enterprisecraftsmanship.com/posts/what-is-domain-logic/">https://enterprisecraftsmanship.com/posts/what-is-domain-logic/</a></li><li><a href="https://www.youtube.com/watch?v=gbzDG_2XQYk">https://www.youtube.com/watch?v=gbzDG_2XQYk</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Web/">Web</category>
      
      <category domain="https://woonyzzang.github.com/categories/Web/Architecture/">Architecture</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/architecture/">architecture</category>
      
      <category domain="https://woonyzzang.github.com/tags/ddd/">ddd</category>
      
      
      <comments>https://woonyzzang.github.com/2024/05/24/domain-logic/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hybrid App 웹뷰 이슈 정리</title>
      <link>https://woonyzzang.github.com/2024/03/14/hybrid-app-webview-issue/</link>
      <guid>https://woonyzzang.github.com/2024/03/14/hybrid-app-webview-issue/</guid>
      <pubDate>Thu, 14 Mar 2024 08:37:46 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;하이브리드-앱-이슈-해결-정리&quot;&gt;&lt;a href=&quot;#하이브리드-앱-이슈-해결-정리&quot; class=&quot;headerlink&quot; title=&quot;하이브리드 앱 이슈 &amp;#x2F; 해결 정리&quot;&gt;&lt;/a&gt;하이브리드 앱 이슈 &amp;#x2F; 해결 정리&lt;/h3&gt;&lt;p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="하이브리드-앱-이슈-해결-정리"><a href="#하이브리드-앱-이슈-해결-정리" class="headerlink" title="하이브리드 앱 이슈 &#x2F; 해결 정리"></a>하이브리드 앱 이슈 &#x2F; 해결 정리</h3><p>하이브리드 앱 프로젝트 개발 진행 시 이슈 있었던 부분 요약 정리</p><p><strong>네이티브 앱 개발</strong></p><ul><li>Ios: Swift 웹뷰</li><li>Android: Kotlin 웹뷰</li></ul><h3 id="1-QA-환경에서-로그인-시-간헐적으로-정상-로그인이-안되는-현상"><a href="#1-QA-환경에서-로그인-시-간헐적으로-정상-로그인이-안되는-현상" class="headerlink" title="1. QA 환경에서 로그인 시 간헐적으로 정상 로그인이 안되는 현상"></a>1. QA 환경에서 로그인 시 간헐적으로 정상 로그인이 안되는 현상</h3><table><thead><tr><th>웹 브라우저</th><th>시뮬레이터 (웹뷰)</th><th>안드로이드 디바이스</th><th>아이폰 디바이스</th></tr></thead><tbody><tr><td>이슈 없음</td><td>이슈 없음</td><td>이슈 발생</td><td>이슈 발생</td></tr></tbody></table><p><strong>[이슈]:</strong></p><ul><li>와이파이 zempot-office 설정 후 디바이스에서 로그인 하면 간헐적 발생</li></ul><p><img src="/images/hybrid-app-webview-issue/hybrid-app-webview-issue1.jpg"></p><p><strong>[해결]:</strong></p><p>Dev 환경은 문제 없는데 QA 환경에서 부터 발생한 현상으로,<br>로그 창을 띄어 확인 결과 프론트도어 교체 되면서 발생하는 WAF 이슈로 인한 문제로 인프라 팀에 문의해서 해결!</p><h3 id="2-네이티브-API-와-자바스크립트-연동-시-인식-못하는-현상"><a href="#2-네이티브-API-와-자바스크립트-연동-시-인식-못하는-현상" class="headerlink" title="2. 네이티브 API 와 자바스크립트 연동 시 인식 못하는 현상"></a>2. 네이티브 API 와 자바스크립트 연동 시 인식 못하는 현상</h3><table><thead><tr><th>웹 브라우저</th><th>시뮬레이터 (웹뷰)</th><th>안드로이드 디바이스</th><th>아이폰 디바이스</th></tr></thead><tbody><tr><td>이슈 없음</td><td>이슈 없음</td><td>이슈 발생</td><td>이슈 발생</td></tr></tbody></table><p><strong>[이슈]:</strong></p><ul><li>네이티브단과 API 연동해서 FCM 토큰 획득 후 관련 해당 로직이 실행 되어야 하는데 예외문 로직 플로우로 진행 됨.</li></ul><p><strong>[해결]:</strong></p><p>웹뷰 진입 시점에서 바로 FCM 토큰 API 사용하여 가져오기를 호출하면 값을 인식 못하는 현상으로,<br>요청 시점을 클라이언트에서 바로 호출 하지 말고 DOM 로드 완료 후인 시점에서 사용하게 해서 해결!</p><h3 id="3-로그아웃-후-앱-실행-시-로그인이-자동으로-유지되어-되어-지는-현상"><a href="#3-로그아웃-후-앱-실행-시-로그인이-자동으로-유지되어-되어-지는-현상" class="headerlink" title="3. 로그아웃 후 앱 실행 시 로그인이 자동으로 유지되어 되어 지는 현상"></a>3. 로그아웃 후 앱 실행 시 로그인이 자동으로 유지되어 되어 지는 현상</h3><table><thead><tr><th>웹 브라우저</th><th>시뮬레이터 (웹뷰)</th><th>안드로이드 디바이스</th><th>아이폰 디바이스</th></tr></thead><tbody><tr><td>이슈 없음</td><td>이슈 없음</td><td>이슈 발생</td><td>이슈 없음</td></tr></tbody></table><p><strong>[이슈]:</strong></p><ul><li>로그아웃 후 앱 재실행 시 자동 로그인 기능이 유지되는 현상</li></ul><p><strong>[해결]:</strong></p><p>안드로이드는 기본적으로 웹뷰의 RAM과 영구 저장소 사이에 쿠키가 동기화가 안되는 현상으로,<br>네이티브단 특정 라이프사이클 onStop 시점에 flush 처리 로직을 추가하여 쿠키를 동기화 시켜 해결!</p><p>브라우저에서 쿠키를 사용하려면 웹뷰 개발 시 안드로이드 쿠키 동기화 셋팅 필수</p><p><strong>[참고]:</strong></p><p>안드로이드 웹뷰를 사용 시 인앱 클라이언트와 쿠키 동기화 안되는 이슈</p><ul><li><a href="https://m.blog.naver.com/PostView.naver?blogId=puresprout77&logNo=220842005470&proxyReferer=">안드로이드 웹뷰 CookieSyncManager 정확한 사용법</a></li></ul><h3 id="4-KG-모빌리언스-PG4-휴대폰-본인-인증-PASS-앱-연동"><a href="#4-KG-모빌리언스-PG4-휴대폰-본인-인증-PASS-앱-연동" class="headerlink" title="4. KG 모빌리언스 PG4 휴대폰 본인 인증 PASS 앱 연동"></a>4. KG 모빌리언스 PG4 휴대폰 본인 인증 PASS 앱 연동</h3><table><thead><tr><th>웹 브라우저</th><th>시뮬레이터 (웹뷰)</th><th>안드로이드 디바이스</th><th>아이폰 디바이스</th></tr></thead><tbody><tr><td>확인 불가</td><td>이슈 발생</td><td>이슈 발생</td><td>이슈 발생</td></tr></tbody></table><p><strong>[이슈]:</strong></p><ul><li>회원가입 PASS 인증 시도 오류</li></ul><p><strong>[해결]:</strong></p><p>네이티브에서 앱 스킴 등록이 안되서 휴대폰 본인 인증 &gt; pass 앱을 인증 시 연동 안되는 현상으로,<br>안드로이드, 아이폰 네이티브에서 pass 앱 스킴 등록 후 네이티브단 웹뷰에서 url 변경 될 때 마다 감지하는 라이프 사이클의 콜백<br>함수 매개변수 url 이 앱 스킴 URL 인지 판별 후 앱을 실행 또는 스토어&#x2F;마켓 으로 리다이렉트 시키는 로직을 추가하여 해결!</p><p><strong>[참고]:</strong></p><ul><li><a href="https://docs.tosspayments.com/guides/webview">웹뷰(WebView) 연동하기 | 토스페이먼츠 개발자센터</a></li></ul><h3 id="5-웹뷰에서-자바스트립트-클립보드-복사-안되는-현상"><a href="#5-웹뷰에서-자바스트립트-클립보드-복사-안되는-현상" class="headerlink" title="5. 웹뷰에서 자바스트립트 클립보드 복사 안되는 현상"></a>5. 웹뷰에서 자바스트립트 클립보드 복사 안되는 현상</h3><table><thead><tr><th>웹 브라우저</th><th>시뮬레이터 (웹뷰)</th><th>안드로이드 디바이스</th><th>아이폰 디바이스</th></tr></thead><tbody><tr><td>이슈 없음</td><td>AOS 이슈 발생</td><td>이슈 발생</td><td>이슈 없음</td></tr></tbody></table><p><strong>[이슈]:</strong></p><ul><li>자바스크립트로 클립보드 기능 구현 시 웹에서는 이슈 없으나 안드로이드 웹뷰 안에서 에러 발생<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">navigator</span>.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(<span class="string">&#x27;텍스트&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/hybrid-app-webview-issue/hybrid-app-webview-issue2.png"></p><p><strong>[해결]:</strong></p><p>해당 이슈로 검색하면 일부 네이티브 안드로이드단에서 <code>android.permission.WRITE_EXTERNAL_STORAGE</code> 퍼미션 추가 설정하면 해결 될 수 있다고 나와 있는데, 실제 확인해 본 결과 이슈가 해결 되진 않았음.<br><code>Clipboard API</code> 미지원 브라우저일 경우 분기 처리로 레거시 클립보드 기능 구현하여 해결!</p><p>(안드로이드 네이티브와 통신해서 실제 네이티브 클립보드로 저장하는 방향도 있었지만, 그렇게 되면 아이폰과 저장 기능 주체가 다르게 관리되는 부분과 굳이 이런 부분들로 되도록 네이티브로 해결하고 싶지 않아서 웹기술로 구현)</p><p><strong>[참고]:</strong></p><ul><li><a href="https://dc2348.tistory.com/16">모바일 웹 URL 복사 기능 구현하기</a></li></ul><h3 id="6-웹뷰에서-새창-페이지-안열리는-현상"><a href="#6-웹뷰에서-새창-페이지-안열리는-현상" class="headerlink" title="6. 웹뷰에서 새창 페이지 안열리는 현상"></a>6. 웹뷰에서 새창 페이지 안열리는 현상</h3><table><thead><tr><th>웹 브라우저</th><th>시뮬레이터 (웹뷰)</th><th>안드로이드 디바이스</th><th>아이폰 디바이스</th></tr></thead><tbody><tr><td>이슈 없음</td><td>이슈 발생</td><td>이슈 발생</td><td>이슈 발생</td></tr></tbody></table><p><strong>[이슈]:</strong></p><ul><li>웹뷰에서 새창 페이지 안열리는 이슈</li><li>a 태그 속성 target&#x3D;”_blank” 이나 자바스크립트로 window.open 으로 새창 페이지 구현 시 동작 반응이 없음.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;https://m.naver.com&quot;</span> target=<span class="string">&quot;_blank&quot;</span>&gt;네이버&lt;/a&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;https://m.naver.com&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul><p><strong>[해결]:</strong><br>네이티브 단에서 처리 해결!</p><p><strong>[참고 ios]</strong></p><ul><li><a href="https://stackoverflow.com/questions/33190234/wkwebview-and-window-open">WKWebView and window.open</a></li><li><a href="https://stackoverflow.com/questions/25713069/why-is-wkwebview-not-opening-links-with-target-blank">Why is WKWebView not opening links with target&#x3D;”_blank”?</a></li><li><a href="https://developer.apple.com/documentation/webkit/wkuidelegate/1536907-webview">webView(_:createWebViewWith:for:windowFeatures:) | Apple Developer Documentation</a></li></ul><p>네이티브에서는 새창이란 개념이 아래 2 가지 케이스가 있는거 같다.</p><ul><li>webview 위에 신규 webview 호출<ul><li>webview 에서 콜백을 받아 서로 통신이나 제어가 필요 할 사용</li></ul></li><li>webview 에서 외부 브라우저 호출<ul><li>통신 없이 별도 독립적인 네이티브 OS 브라우저 기본 브라우저 필요할 경우 사용</li><li>아이폰은 safari, 안드로이드는 기본이 삼성 (크롬 추가 설치 되어 있으면 선택할 수있는 OS UI 노출)</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/App/">App</category>
      
      <category domain="https://woonyzzang.github.com/categories/App/Hybrid/">Hybrid</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/hybridApp/">hybridApp</category>
      
      
      <comments>https://woonyzzang.github.com/2024/03/14/hybrid-app-webview-issue/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hybrid App 로컬 환경 셋팅</title>
      <link>https://woonyzzang.github.com/2024/02/24/hybrid-app-local-setting/</link>
      <guid>https://woonyzzang.github.com/2024/02/24/hybrid-app-local-setting/</guid>
      <pubDate>Sat, 24 Feb 2024 07:44:57 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;KSOP-App-하이브리드-앱-셋팅&quot;&gt;&lt;a href=&quot;#KSOP-App-하이브리드-앱-셋팅&quot; class=&quot;headerlink&quot; title=&quot;[KSOP App] 하이브리드 앱 셋팅&quot;&gt;&lt;/a&gt;[KSOP App] 하이브리드 앱 셋팅&lt;/h3&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="KSOP-App-하이브리드-앱-셋팅"><a href="#KSOP-App-하이브리드-앱-셋팅" class="headerlink" title="[KSOP App] 하이브리드 앱 셋팅"></a>[KSOP App] 하이브리드 앱 셋팅</h3><p><strong>네이티브 앱 개발</strong></p><ul><li>Ios: Swift 웹뷰</li><li>Android: Kotlin 웹뷰</li><li>SSL</li><li>네이티브 &lt;-&gt; 자바스크립트 연동</li><li>커스텀 유저 에이전트</li></ul><hr><p>테스트 구현은 네이티브 웹뷰가 아닌 다른 언어의 크로스 플랫폼 프레임워크의 flutter 웹뷰와 연동하여 목업 테스트한 결과를 바탕으로 작성되었기에 네이티브단에서 제공하는 웹뷰와 다소 차이가 있을 수 있음.</p><h3 id="로컬환경-개발-시-네이티브-개발-요청-체크-리스트"><a href="#로컬환경-개발-시-네이티브-개발-요청-체크-리스트" class="headerlink" title="![ 로컬환경 ] 개발 시 네이티브 개발 요청 체크 리스트"></a>![ 로컬환경 ] 개발 시 네이티브 개발 요청 체크 리스트</h3><ol><li>로컬서버 환경 셋팅 접속 가능한 아이폰, 안드로이드 환경 필요</li></ol><ul><li>플랫폼팀에서 url 입력 가능하게 입력 컨트롤 UI 노출 (입력 컨트롤 값으로 웹뷰 url 로드) 해서 전달해준다고 협의</li><li>아이폰&#x2F;안드로이드 디바이스 시뮬레이터에서 host 셋팅한 도메인 접근 확인 필요 (웹뷰 url 접근 시 hosts 정의한 도메인 붙을 수 있는지…)</li></ul><table><thead><tr><th>아이폰 시뮬레이터</th><th>안드로이드 시뮬레이터</th></tr></thead><tbody><tr><td><img src="/images/hybrid-app-local-setting/hybrid-app-local-setting1.png"></td><td><img src="/images/hybrid-app-local-setting/hybrid-app-local-setting2.png"></td></tr><tr><td>로컬 host 접근 가능</td><td>로컬 host 접근 불가</td></tr></tbody></table><ul><li>아이폰 시뮬레이터: 별도의 hosts 셋팅이 필요 없이 접근 가능.</li><li>안드로이드 시뮬레이터: 아래와 같이 별도의 hosts 셋팅 필요함.<ul><li>참고: <a href="https://sweetcoding.tistory.com/135">How to edit android emulator hosts file (안드로이드 에뮬레이터 호스트 파일 수정)</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. AndroidSDK 내에 tools 폴더로 이동 후 아래 커맨드 입력 (KSOP는 Avd 설정의 Adv Name)</span><br><span class="line">   a. ./emulator -avd KSOP -writable-system</span><br><span class="line">2. platform-tools 폴더로 이동 후 ./adb devices 커맨드 입력 해 emulator 이름 확인 후</span><br><span class="line">   예)</span><br><span class="line">   List of devices attached</span><br><span class="line">   emulator-5554 offline</span><br><span class="line">   emulator-5556 device</span><br><span class="line">3. ./adb -s emulator-5556 remount</span><br><span class="line">4. ./adb -s emulator-5556 pull ./system/etc/hosts pull 받을폴더위치 받은 hosts 수정</span><br><span class="line">   예)</span><br><span class="line">   127.0.0.1 localhost</span><br><span class="line">   10.0.2.2 tapp.ksop.net // 추가 (아이피 변경 x)</span><br><span class="line">5. ./adb -s emulator-5556 push C:\Android\hosts ./system/etc/hosts // 호스트 파일 push</span><br></pre></td></tr></table></figure></li></ul></li></ul><ol start="2"><li><u>네이티브단 제스처 활성화 시 웹뷰에서 띄어질 웹사이트 body 스크롤 인식 할 수 있는 별도 옵션이 별도로 있다면 해제</u></li><li><u>네이티브단 웹뷰 설정에 SSL 해제 옵션이 별도로 있는 경우 옵션 해제 (SSL 인증 무효화)</u><ul><li>네이티브 웹뷰안에 띄어질 웹사이트는 보안 프로토콜 + 도메인 기반으로 셋팅 되어 있음.<ul><li>(<a href="https://tapp.ksop.net:3000/">https://tapp.ksop.net:3000</a> 으로 접근)</li></ul></li></ul></li><li>[ios] 경우 xcode &gt; 빌드 시 info.plist 옵션 활성화<figure class="highlight plist"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   ...</span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSAppTransportSecurity<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSAllowsArbitraryLoads<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>[ios] Swift 네이티브인 경우<ul><li><code>SafeArea</code> 설정 활성화 필요</li><li><code>UIDelegate</code> 연동 활성화 필요</li></ul></li><li><del>휴대폰 본인인증 페이지 경우 도메인이 PG4쪽 이기 때문에 이전페이지로 이동할 수 있는 기능이 없는 이슈</del><ul><li>안드로이드는 물리 백버튼이 있어서 가능하나 아이폰은 물리 버튼이 없어 이동 불가</li><li>플랫폼팀에서 네이티브 제스처 기능으로 대체하기로 협의</li><li>단, 웹뷰 안에 웹사이트에서 스와이프 기능이 있을 시 네이티브단 제스처 기능과 충돌하는지 확인 필요.<ul><li>i. 1 번째 방안:<ul><li>네이티브 웹뷰와 웹사이트에서 자바스크립트 연동 기능으로 네이티브단 제스처 충돌 방지 처리</li></ul></li><li>ii. 2 번째 방안:<ul><li>네이티브 제스처가 헤더 UI 노출</li><li>웹뷰 안에 웹사이트 백버튼 ui는 삭제 검토</li></ul></li><li>iii. 3 번째 방안: (권장)<ul><li>네이티브 헤더 UI 를 동적으로 PG4 도메인일 경우에만 판단해서 노출</li></ul></li></ul></li><li>확인결과 : 이슈없음 (네이티브단 제스처 기능 충돌 안함)<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 웹뷰안에 웹사이트 페이지 이동 후 로드 완료 시점 이벤트 판단 후...</span></span><br><span class="line"><span class="keyword">if</span> (url.toString().startsWith(<span class="string">&#x27;https://auth.mobilians.co.kr/&#x27;</span>)) &#123;</span><br><span class="line">  <span class="comment">// 네이티브 헤더 UI 노출</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// 네이티브 헤더 UI 숨김</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><u>네이티브쪽과 웹뷰안에 웹 사이트 페이지 자바스크립트 연동 API 가이드 문서 필요</u><ul><li>유니티 웹뷰가 아니라 스위프트&#x2F;코틀린 네이티브 웹뷰라 제공받을 API 가 다름.</li><li>프론트단에서 디바이스 구분해서 분기처리 호출 해야함. (Adapter Layer 에서 처리)</li><li>API 문서:<ul><li>네이티브 앱 &lt;-&gt; 자바스크립트 연동 가이드</li><li>FCM 토큰 가져오기 API (아이폰의 경우 시뮬레이터환경에서는 확인 불가능)<ul><li>프론트개발 시 실제 디바이스에서 웹뷰 진입 시점인 <code>create</code> 에서 바로 FCM 토큰 가져오기를 호출하면 값을 인식 못하는 이슈가 존재하므로 요청 시점을 <code>mounted</code> 시점에서 사용해야 한다.</li></ul></li></ul></li></ul></li><li><u>네이티브쪽에서 웹뷰쪽에 유저에이전트 특정 커스텀 값 전달 필요</u><ul><li>(모바일웹으로 들어온 유저인지 인앱 으로 들어온 유저인지 판별 및 기타 사용)</li><li>유저에이전트 커스텀 문자</li></ul></li><li><u>안드로이드의 경우 웹뷰 개발 시 쿠키 동기화 셋팅 필수</u><ul><li><a href="https://m.blog.naver.com/PostView.naver?blogId=puresprout77&logNo=220842005470&proxyReferer=">안드로이드 웹뷰 CookieSyncManager 정확한 사용법</a></li></ul></li><li><u>웹뷰에서 링크 target&#x3D;”_blank”, 자바스크립트 window.open 새창 열림 기능 사용하려면 네이티브단 활성화 필요</u></li></ol><ul><li>Swift 네이티브: Delegate 연동 활성화 필요</li><li>Kotlin 네이티브: 연동 활성화 필요</li></ul><h3 id="FCM-토큰-갱신-케이스"><a href="#FCM-토큰-갱신-케이스" class="headerlink" title="[FCM 토큰 갱신 케이스]"></a>[FCM 토큰 갱신 케이스]</h3><ul><li>앱이 Instance ID 를 삭제할때</li><li>앱이 새 기기에서 복구될때</li><li>유저가 앱을 지우거나&#x2F;다시 설치할때</li><li>유저가 앱 데이터를 초기화할때</li></ul><p><strong>FCM 푸시는 아이폰, 안드로이드 둘 다 백그라운드 상태에서만 동작한다고 함.</strong></p>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/App/">App</category>
      
      <category domain="https://woonyzzang.github.com/categories/App/Hybrid/">Hybrid</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/hybridApp/">hybridApp</category>
      
      
      <comments>https://woonyzzang.github.com/2024/02/24/hybrid-app-local-setting/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Git 브랜치 종류</title>
      <link>https://woonyzzang.github.com/2024/01/24/git-branch-type/</link>
      <guid>https://woonyzzang.github.com/2024/01/24/git-branch-type/</guid>
      <pubDate>Wed, 24 Jan 2024 04:20:33 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;보통-사용되는-브랜치&quot;&gt;&lt;a href=&quot;#보통-사용되는-브랜치&quot; class=&quot;headerlink&quot; title=&quot;보통 사용되는 브랜치&quot;&gt;&lt;/a&gt;보통 사용되는 브랜치&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master/main&lt;/code&gt;: 항상</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="보통-사용되는-브랜치"><a href="#보통-사용되는-브랜치" class="headerlink" title="보통 사용되는 브랜치"></a>보통 사용되는 브랜치</h3><ul><li><code>master/main</code>: 항상 최신의 안정적인 프로그램</li><li><code>develop</code>: 베타 버전&#x2F;모든 개발 로그들이 쌓이는곳, 새로운 feature 기능들이 완성되고 머지되는 곳</li><li><code>feature</code>: 기능을 추가 할 때마다 따는 브랜치</li><li><code>test</code>: 테스트</li><li><code>hotfix</code>: 급한 수정</li><li><code>release</code>: 배포할때 쓰는 테스트용 브렌치</li></ul><p><strong>커밋 메시지 표기</strong></p><ul><li><code>[Breaking]</code>: 속보</li><li><code>[Deprecation]</code>: 지원 중단</li><li><code>[Feature]</code>: 추가</li><li><code>[Improvement]</code>: 개선</li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Tools/">Tools</category>
      
      <category domain="https://woonyzzang.github.com/categories/Tools/Git/">Git</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/architecture/">architecture</category>
      
      <category domain="https://woonyzzang.github.com/tags/git/">git</category>
      
      
      <comments>https://woonyzzang.github.com/2024/01/24/git-branch-type/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ISO Simulator 개발환경 앱 설치</title>
      <link>https://woonyzzang.github.com/2023/12/14/ios-simulator-app-install/</link>
      <guid>https://woonyzzang.github.com/2023/12/14/ios-simulator-app-install/</guid>
      <pubDate>Thu, 14 Dec 2023 08:23:04 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;IOS-아이폰-시뮬레이터용-빌드파일-app-설치&quot;&gt;&lt;a href=&quot;#IOS-아이폰-시뮬레이터용-빌드파일-app-설치&quot; class=&quot;headerlink&quot; title=&quot;IOS 아이폰 시뮬레이터용 빌드파일 app 설치&quot;&gt;&lt;/a&gt;IOS 아이폰 </description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="IOS-아이폰-시뮬레이터용-빌드파일-app-설치"><a href="#IOS-아이폰-시뮬레이터용-빌드파일-app-설치" class="headerlink" title="IOS 아이폰 시뮬레이터용 빌드파일 app 설치"></a>IOS 아이폰 시뮬레이터용 빌드파일 app 설치</h3><p>xcode 빌드 후 아래 경로 찾아가보면 xxx.app 파일 존재하는데 드래그앤 드롭해서 시뮬레이터에 넣으면 자동 설치 됨.</p><p><strong>app 파일 위치 경로</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/사용자/&#123;Users&#125;/Library/Developer/Xcode/DerivedData/&#123;프로젝트&#125;/Build/Products/Debug-iphonesimulator</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/App/">App</category>
      
      <category domain="https://woonyzzang.github.com/categories/App/IOS/">IOS</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/simulator/">simulator</category>
      
      
      <comments>https://woonyzzang.github.com/2023/12/14/ios-simulator-app-install/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Git Commit 컨벤션</title>
      <link>https://woonyzzang.github.com/2023/10/16/git-commit-convention/</link>
      <guid>https://woonyzzang.github.com/2023/10/16/git-commit-convention/</guid>
      <pubDate>Mon, 16 Oct 2023 03:01:39 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Git-Commit-컨벤션&quot;&gt;&lt;a href=&quot;#Git-Commit-컨벤션&quot; class=&quot;headerlink&quot; title=&quot;Git Commit 컨벤션&quot;&gt;&lt;/a&gt;Git Commit 컨벤션&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ex) feat </description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Git-Commit-컨벤션"><a href="#Git-Commit-컨벤션" class="headerlink" title="Git Commit 컨벤션"></a>Git Commit 컨벤션</h3><blockquote><p>ex) feat (변경할 파일) : 변경 내용 (&#x2F;#issue number)</p></blockquote><p><strong>커밋 메시지 규칙</strong></p><ul><li>feat: 새로운 기능 구현</li><li>fix: 버그, 오류 해결</li><li>chore: src 또는 test 파일을 수정하지 않은 기타 변경 사항 (새로운 파일 생성, 파일 이동, 이름 변경 등)</li><li>refactor: 버그 수정이나 기능 추가가 없는 코드 변경 (코드 구조 변경 등의 리팩토링)</li><li>style: 코드의 의미에 영향을 미치지 않는 변경 사항 (코드 형식, 세미클론 추가: 비지니스 로직에 변경 없음)</li><li>build: 빌드 시스템 또는 외부의 영향을 미치는 변경 사항 종속성 (라이브러리 추가 등)</li><li>pref: 성능을 향상 시키기 위한 코드 변경</li><li>test: 테스트 추가 또는 이전 테스트 수정</li><li>docs: README 나 WIKI 등의 문서 개정</li><li>revert: 이전 커밋을 되돌리는 경우</li><li>ci: CI 구성 파일 및 스크립트 변경</li><li>Merge: 다른 브랜치를 merge 하는 경우</li><li>Init: Initial commit 을 하는 경우</li></ul><hr><blockquote><p>Git hooks 의 prepare-commit-msg 활용해서 아래 npm 모듈 연동해서 메시지 자동화 가능</p></blockquote><p><strong>npm 의존성 모듈 라이브러리</strong></p><ul><li>husky</li><li>commitizen</li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Tools/">Tools</category>
      
      <category domain="https://woonyzzang.github.com/categories/Tools/Git/">Git</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/architecture/">architecture</category>
      
      <category domain="https://woonyzzang.github.com/tags/git/">git</category>
      
      
      <comments>https://woonyzzang.github.com/2023/10/16/git-commit-convention/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GitHub 커밋 메세지에 JIRA 이슈번호 자동 연동</title>
      <link>https://woonyzzang.github.com/2023/09/20/git-commit-message-jira-connect/</link>
      <guid>https://woonyzzang.github.com/2023/09/20/git-commit-message-jira-connect/</guid>
      <pubDate>Wed, 20 Sep 2023 03:12:10 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;커밋-시-항상-앞에-이슈번호를-넣어주어야-하는-번거로움을-자동으로-넣어주도록-처리하는-방법&quot;&gt;&lt;a href=&quot;#커밋-시-항상-앞에-이슈번호를-넣어주어야-하는-번거로움을-자동으로-넣어주도록-처리하는-방법&quot; class=&quot;headerlink&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="커밋-시-항상-앞에-이슈번호를-넣어주어야-하는-번거로움을-자동으로-넣어주도록-처리하는-방법"><a href="#커밋-시-항상-앞에-이슈번호를-넣어주어야-하는-번거로움을-자동으로-넣어주도록-처리하는-방법" class="headerlink" title="커밋 시 항상 앞에 이슈번호를 넣어주어야 하는 번거로움을 자동으로 넣어주도록 처리하는 방법"></a>커밋 시 항상 앞에 이슈번호를 넣어주어야 하는 번거로움을 자동으로 넣어주도록 처리하는 방법</h3><blockquote><p><code>.git/hooks</code> 디렉토리에 <code>prepare-commit-msg</code> 파일을 생성하면 사용자가 커밋 메시지를 입력하기 전 단계에서 내용을 변경할 수 있다.</p></blockquote><p><code>prepare-commit-msg</code> 파일 수정</p><ul><li>위치: .git &gt; hooks &gt; prepare-commit-msg.sample</li></ul><blockquote><p>기본으로 확장자가 <code>.sample</code> 로 처리되어 있으며 사용하고 싶은 파일에 스크립트를 작성한뒤에 뒤의 확장자 제거</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ -z &quot;$BRANCHES_TO_SKIP&quot; ]; then</span><br><span class="line">  BRANCHES_TO_SKIP=(master develop qa release hotfix)</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">BRANCH_NAME=$(git symbolic-ref --short HEAD)</span><br><span class="line">BRANCH_PREFIX=&quot;$&#123;BRANCH_NAME%%/*&#125;&quot;</span><br><span class="line">BRANCH_JIRA=&quot;$&#123;BRANCH_NAME##*/&#125;&quot;</span><br><span class="line">BRANCH_PREFIX_PATTERN=&quot;^(issue|feature)$&quot;</span><br><span class="line"></span><br><span class="line">if [[ &quot;$BRANCH_PREFIX&quot; =~ $BRANCH_PREFIX_PATTERN ]]; then</span><br><span class="line">  JIRA_KEY=&quot;$&#123;BRANCH_JIRA%%-*&#125;&quot;</span><br><span class="line">  JIRA_ID=$(echo $BRANCH_JIRA | egrep -o &quot;$&#123;JIRA_KEY&#125;-[0-9]+&quot;)</span><br><span class="line">  BRANCH_EXCLUDED=$(printf &quot;%s\n&quot; &quot;$&#123;BRANCHES_TO_SKIP[@]&#125;&quot; | grep -c &quot;^$BRANCH_JIRA&quot;)</span><br><span class="line">  BRANCH_IN_COMMIT=$(grep -c &quot;$JIRA_ID&quot; $1)</span><br><span class="line"></span><br><span class="line">  if [ -n &quot;$JIRA_ID&quot; ] &amp;&amp; ! [[ $BRANCH_EXCLUDED -eq 1 ]] &amp;&amp; ! [[ $BRANCH_IN_COMMIT -ge 1 ]]; then</span><br><span class="line">    sed -i.bak -e &quot;s/^\(.*\)$/* #$JIRA_ID - \1/&quot; $1</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="플로우"><a href="#플로우" class="headerlink" title="플로우"></a>플로우</h3><ol><li>브랜치 네이밍이 <code>issue/&#123;이슈티켓&#125;</code>, <code>feature/&#123;이슈티켓&#125;</code> 으로 시작하는 특정 브랜치인 경우에만 적용<br>a. <code>master</code>, <code>develop</code>, <code>qa</code>, <code>release</code>, <code>hotfix</code> 인 브랜치 경우에는 적용 안되게 스킵</li><li>브랜치 이름으로부터 Jira 이슈 번호 가져오기<br>a. 예를 들어 feature&#x2F;ESFH-1234-xxxx-yyyy 인경우 ESFH-1234 추출</li><li>커밋 메세지에 이미 Jira 이슈번호를 기재했다면 적용 안되게 스킵</li><li>위의 경우를 다 검증한뒤, 커밋메세지 앞에 Jira 이슈번호를 추가</li></ol><h3 id="테스트"><a href="#테스트" class="headerlink" title="[테스트]"></a>[테스트]</h3><ol><li>지라이슈 브랜치 생성<ul><li>feature&#x2F;ESFH-1</li></ul></li><li>커밋 명령어 실행:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m “Core 초기 개발”</span><br></pre></td></tr></table></figure></li><li>메시지 커밋 결과<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* #ESFH-1 - Core 초기 개발</span><br></pre></td></tr></table></figure></li></ol><h3 id="Hook-레파지토리-연동-공통화"><a href="#Hook-레파지토리-연동-공통화" class="headerlink" title="Hook 레파지토리 연동 (공통화)"></a>Hook 레파지토리 연동 (공통화)</h3><blockquote><p>기존 저장소에 한 번에 적용할 수 있는 스크립트를 만들어 커스텀 hook 을 공통으로 적용하고 싶은 프로젝트에 아래 터미널 명령어를 사용 (프로젝트 root 에서 커맨드 입력)</p></blockquote><p><strong>Linux</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L -H <span class="string">&quot;Authorization: token &lt;TOKEN&gt;&quot;</span> https://api.github.com/repos/&lt;저장소 URL&gt;/tarball/master | tar -xzv --strip-components=1 \</span><br><span class="line">  &amp;&amp; bash setup.sh</span><br></pre></td></tr></table></figure><p><strong>Windows</strong></p><figure class="highlight ps"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> <span class="string">&#x27;https://api.github.com/repos/&lt;저장소 URL&gt;/zipball/master&#x27;</span> <span class="literal">-Headers</span> <span class="selector-tag">@</span>&#123;Authorization=<span class="string">&#x27;token &lt;TOKEN&gt;&#x27;</span>&#125; <span class="literal">-OutFile</span> <span class="string">&#x27;master.zip&#x27;</span>;`</span><br><span class="line">  <span class="built_in">Expand-Archive</span> <span class="string">&#x27;master.zip&#x27;</span> <span class="literal">-DestinationPath</span> <span class="string">&#x27;extended&#x27;</span> <span class="literal">-Force</span>;`</span><br><span class="line">  <span class="built_in">Get-ChildItem</span> <span class="literal">-Path</span> <span class="string">&#x27;.\extended\*\*&#x27;</span> | <span class="built_in">Move-Item</span> <span class="literal">-Destination</span> <span class="string">&#x27;.&#x27;</span>;`</span><br><span class="line">  <span class="built_in">Remove-Item</span> <span class="string">&#x27;master.zip&#x27;</span>, <span class="string">&#x27;.\extended&#x27;</span> <span class="literal">-Recurse</span>;`</span><br><span class="line">  .\setup.ps1</span><br></pre></td></tr></table></figure><h3 id="참조"><a href="#참조" class="headerlink" title="참조"></a>참조</h3><ul><li><a href="https://medium.com/prnd/github-%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%84%B8%EC%A7%80%EC%97%90-jira-%EC%9D%B4%EC%8A%88%EB%B2%88%ED%98%B8-%EC%9E%90%EB%8F%99%EC%9C%BC%EB%A1%9C-%EB%84%A3%EC%96%B4%EC%A3%BC%EA%B8%B0-779048784037">https://medium.com/prnd/github-%EC%BB%A4%EB%B0%8B-%EB%A9%94%EC%84%B8%EC%A7%80%EC%97%90-jira-%EC%9D%B4%EC%8A%88%EB%B2%88%ED%98%B8-%EC%9E%90%EB%8F%99%EC%9C%BC%EB%A1%9C-%EB%84%A3%EC%96%B4%EC%A3%BC%EA%B8%B0-779048784037</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Tools/">Tools</category>
      
      <category domain="https://woonyzzang.github.com/categories/Tools/Git/">Git</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/git/">git</category>
      
      <category domain="https://woonyzzang.github.com/tags/jira/">jira</category>
      
      
      <comments>https://woonyzzang.github.com/2023/09/20/git-commit-message-jira-connect/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>PR 코드 리뷰</title>
      <link>https://woonyzzang.github.com/2023/08/22/pr-code-review/</link>
      <guid>https://woonyzzang.github.com/2023/08/22/pr-code-review/</guid>
      <pubDate>Tue, 22 Aug 2023 04:25:17 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;코드-리뷰의-포인트&quot;&gt;&lt;a href=&quot;#코드-리뷰의-포인트&quot; class=&quot;headerlink&quot; title=&quot;코드 리뷰의 포인트&quot;&gt;&lt;/a&gt;코드 리뷰의 포인트&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;작성자&lt;/th&gt;
&lt;th&gt;리뷰어</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="코드-리뷰의-포인트"><a href="#코드-리뷰의-포인트" class="headerlink" title="코드 리뷰의 포인트"></a>코드 리뷰의 포인트</h3><table><thead><tr><th>작성자</th><th>리뷰어</th></tr></thead><tbody><tr><td>빠르게 개발해서 배포하는게 목적…</td><td>코드 꼼꼼히 리뷰 해서 회사의 팀의 리스크를 줄이는 목적…</td></tr><tr><td>1차 리뷰어: 코드 담당자에게 할당<br>2차 리뷰어: 신입 개발자에게 할당</td><td>-</td></tr></tbody></table><p><strong>[작성자 Tip]</strong></p><ol><li>리뷰어의 좋은 의도를 생각해야 하며, 코드를 감정적으로 받아들면 안된다.<br>a. 동료, 후임에게 지적 받는 것 같은 불편함과 자존심 상하는 마인드의 개발자는 성장하기 힘들다..</li><li>동일한 코멘트를 받지 않도록 숙지하고 개선해서 앞으로 코드를 만들어 나간다.</li><li>경력에 상관없이 배울 점이 있다면 수긍하고 받아 들이는 마인드를 가져라.</li><li>PR 사이즈를 최대한 작게해서 요청 (코드 변경을 작게…)<br>a. 코드 크기가 크면 코드 리뷰도 느리고 피드백 반영도 느려진다.<br>b. 가급적 PR에 400줄 이하로 요청하는것이 좋다.<br>c. 버그 하나당 하나의 PR 요청 권장.<br>d. 버전 업데이트 및 리팩토링은 별도의 PR 요청 권장.<br>e. 규모가 큰 변경 사항은 의미 있는 작은 단위로 요청 권장.</li><li>리뷰어가 빠르게 이해할 수 있도록 맥락(Context)를 이해할 수 있도록 정보 제공한다.</li><li>즉, PR 설명란에 코드가 뭘 하는지 설명하기 보다는 왜 이런 선택을 했는지에 대한 내용을 기재하는 것이 좋다.<br>a. (Why &gt; What)</li></ol><blockquote><p>[맥락(Context)를 이해할 수 있도록 정보 제공 - PR 요청 시 설명란 샘플]</p><ul><li>What? - 이 PR 이 무엇인지?</li><li>Why? - 어떤 티켓을 배수를 하는지? 왜 필요한지?</li><li>How? - 어떻게 구현 했는지?</li><li>Testing? - 어떻게 테스트 할 수 있는지?</li><li>Screenshots (optional) - 이해하기 위한 스크린샷…</li><li>Anything Else? - 어떻게 재현할 수 있는지?</li></ul></blockquote><ol start="7"><li>빠른 시일 내에 리뷰를 받을 수 있도록 최선을 다한다.<br>a. 리뷰어가 휴가가 있는지 일정이 바쁜지 체크 후 리뷰 요청을 언제까지 해달라고 요청…</li><li>리뷰어의 코멘트에 대한 부분에 확실한 답변을 기재한다.<br>a. ex) 네, 반영 햇습니다.</li></ol><table><thead><tr><th>접두사 축약어</th><th>의미</th><th>설명</th></tr></thead><tbody><tr><td><code>ACK</code></td><td>Acknowledge</td><td>인정한다.<br>반영 완료 했다</td></tr></tbody></table><p><strong>[리뷰어 Tip]</strong></p><ol><li>꼼꼼하게 확인 (팀의 리스크를 줄이기)<br>a. 누락된 기능 (케이스) 조기 발견<br>b. 버그 및 실수 조기 발견<br>c. 테스트 코드의 작성 여부<br>d. 코드 컨벤션이 잘 지켜졌는지 확인<br>e. 가독성과 확장성 및 유지보수 편의성<br>f. 팀원들의 이해도 향상<br>g. 코드 퀄리티 향상</li><li>컨벤션에 관한 리뷰는 자동화 한다.<br>a. (테스트 커버리지, ESLint, Formatter, Team’s Convension)<br>b. 기본적인 것들은 자동화 하고 리뷰어는 근본적인 코드 코어에 집중한다.</li><li>좋은 의도를 전제로, 친절하게 설명한다.<br>a. 비판보다는 호기심을 가지고 작성자의 코드 의도를 파악</li><li>명확하고 구체적인 피드백 주기<br>a. 이유와 다른 대안 &#x2F; 추천하는 방법을 제안</li><li>중요성에 따라 명확한 행동을 촉구</li></ol><table><thead><tr><th>접두사 축약어</th><th>의미</th><th>설명</th></tr></thead><tbody><tr><td><code>QQ</code></td><td>Quick Question</td><td>질문 요청</td></tr><tr><td><code>NIT</code></td><td>Nitpicking</td><td>마이너 요청 (옵션 사항)</td></tr><tr><td><code>RC</code></td><td>Request For Change</td><td>필수 수정 요청</td></tr></tbody></table><ol start="6"><li>리뷰 완료를 명확하게 작성자에게 알려라.<br>a. 승인 | 반려 | 질문 등등…<br>b. 리뷰 처리를 하면 자동으로 메일로 가겠지만 확실하게 메신저로 한번 더 정확히 알려주는게 좋다.</li></ol>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Web/">Web</category>
      
      <category domain="https://woonyzzang.github.com/categories/Web/Others/">Others</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/others/">others</category>
      
      <category domain="https://woonyzzang.github.com/tags/git/">git</category>
      
      <category domain="https://woonyzzang.github.com/tags/pr/">pr</category>
      
      
      <comments>https://woonyzzang.github.com/2023/08/22/pr-code-review/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Docker 로컬 개발환경 테스트</title>
      <link>https://woonyzzang.github.com/2023/08/22/docker-local-development-test/</link>
      <guid>https://woonyzzang.github.com/2023/08/22/docker-local-development-test/</guid>
      <pubDate>Tue, 22 Aug 2023 02:26:25 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Service-Development-Team-기술-스펙-구성&quot;&gt;&lt;a href=&quot;#Service-Development-Team-기술-스펙-구성&quot; class=&quot;headerlink&quot; title=&quot;Service Development Team 기</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Service-Development-Team-기술-스펙-구성"><a href="#Service-Development-Team-기술-스펙-구성" class="headerlink" title="Service Development Team 기술 스펙 구성"></a>Service Development Team 기술 스펙 구성</h3><blockquote><p>도커를 활용해 기술 스펙 환경을 패키징 해서 로컬 환경에서 테스트 확인…</p><p>SPA + API 조합 시 프론트 서버와 백엔드 서버가 분리 되어 있는 구조 이기에 서로 연동된 목업 구현이나 테스트 확인 필요 시 DevOps 를 통해 각자 배포 후 확인 해야 하는 프로세스 플로우를 간소화 할 수 있다.</p></blockquote><p><strong>Docker 개발 환경 구성</strong></p><ul><li>프록시 서버: Nginx</li><li>프론트 서버: Nuxt2</li><li>API 서버: .Net6</li></ul><p><strong>Docker 시스템 구성도</strong></p><p><img src="/images/docker-local-development-test/docker-local-development-test1.png" alt="서버 구성"></p><p><strong>[TODO] Docker + Docker Compose</strong></p><ul><li>[v] Docker 환경 구성 셋팅<ul><li>[v] 네트워크 구성 셋팅<ul><li>[v] 고정 IP 할당 셋팅</li></ul></li><li>[v] 볼륨 구성 셋팅</li><li>[v] 쉘 스크립트 구성 셋팅<ul><li>[v] Windows 환경</li><li>[v] Linux 환경</li></ul></li><li>[v] Docker Compose 환경 구성 셋팅<ul><li>[v] 네트워크 연동</li><li>[v] 볼륨 마운트 연동</li><li>[v] 환경 변수 연동</li></ul></li><li>[v] [Nginx] 프록시 서버 환경 구성 셋팅<ul><li>[v] 포트 포워딩 셋팅</li><li>[v] SSL 인증서 셋팅</li><li>[v] 인증서 자동 갱신 셋팅</li></ul></li><li>[v] [Nuxt2] 프론트 서버 환경 구성 셋팅<ul><li>[v] Hot Reload 셋팅</li><li>[v] 기본 테스트 구조 환경 셋팅</li><li>[v] .Net 기본 템플릿 view (html, css, js) 적용</li></ul></li><li>[v] [.Net6] API 서버 환경 구성 셋팅<ul><li>[-] Hot Reload 셋팅</li><li>[-] 기본 테스트 구조 환경 셋팅</li></ul></li></ul></li></ul><blockquote><p>프론트, 백엔드 분리되어 있는 디펙토리에서 작업하고 저장소 레파지토리를 서로 공유한 방식의 도커를 활용할 수도 있지만, <code>페어 프로그래밍</code> 기능을 사용하면 서로 분업화된 공유 방식이 아닌 동시 협업이 가능하게 활용 할 수 있다.</p></blockquote><h3 id="페어-프로그래밍-동시-편집"><a href="#페어-프로그래밍-동시-편집" class="headerlink" title="페어 프로그래밍 (동시 편집)"></a>페어 프로그래밍 (동시 편집)</h3><ul><li><a href="https://visualstudio.microsoft.com/ko/services/live-share/">Visual Studio Live Share: 실시간 코드 공동 작업 도구</a></li></ul><table><thead><tr><th>IDE</th><th>Session Link Share</th><th>OS 호환</th></tr></thead><tbody><tr><td>Intellij</td><td>Intellij or 클라이언트 앱 다운로드&#x2F;설치 후 접속 가능</td><td>O</td></tr><tr><td>Visual Studio Code</td><td>VSC or 웹 선택 접속 가능</td><td>O</td></tr><tr><td>Visual Studio</td><td>VS or VSC or 웹 선택 접속 가능</td><td>△ (Mac OS 인 경우 VS 미지원)</td></tr></tbody></table><ul><li>Session Link Share 모드 선택하면 이 후에도 자동으로 계속 해당 모드로 접속하게 되는데 초기화 하려면 브라우저 캐시 삭제 후 다시 접속하면 모드 선택 가능</li></ul><hr><h3 id="Setting-Guide"><a href="#Setting-Guide" class="headerlink" title="Setting Guide"></a>Setting Guide</h3><ul><li>Git Repository: 비공개</li></ul><p><strong>스캐폴딩 구조</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|- [backend] # .Net6</span><br><span class="line">|- [frontend] # Nuxt2</span><br><span class="line">|- [proxy] # Nginx</span><br><span class="line">|- [scripts] # 쉘 스크립트</span><br></pre></td></tr></table></figure><ul><li>Rancher Desktop 오픈소스 앱 다운로드: <a href="https://rancherdesktop.io/">Rancher Desktop</a></li></ul><blockquote><p>윈도우 OS 경우 사전에 WSL2 환경 구성 설치가 되어 있어야 한다.</p></blockquote><p>Rancher Desktop 설치 후 설정 패널에서 <code>Cotainer Engine</code> &gt; <code>dockerd (moby)</code> 로 적용해줘야 Docker 기본 커맨드 라인 API 를 사용 할 수 있음.</p><p><img src="/images/docker-local-development-test/docker-local-development-test2.png" alt="Rancher Desktop 패널 필수 셋팅 옵션"></p><h3 id="Use-Guide"><a href="#Use-Guide" class="headerlink" title="Use Guide"></a>Use Guide</h3><ol><li>Rancher Desktop 앱 실행</li><li>host 파일 설정<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 zempotdocker.com </span><br></pre></td></tr></table></figure></li><li>쉘 스크립트 실행<ul><li><strong>윈도우 OS</strong><ul><li>도커 시작: <code>[scripts]</code> &gt; <code>[windows]</code> &gt; <code>start_server.bat</code> 실행</li><li>도커 종료: <code>[scripts]</code> &gt; <code>[windows]</code> &gt; <code>end_server.bat</code> 실행</li><li>백엔드 리빌드: <code>[scripts]</code> &gt; <code>[windows]</code> &gt; <code>backend_rebuild.bat</code> 실행</li></ul></li><li><strong>리눅스 OS</strong><ul><li>도커 시작: <code>[scripts]</code> &gt; <code>[linux]</code> &gt; <code>start_server.sh</code> 실행</li><li>도커 종료: <code>[scripts]</code> &gt; <code>[linux]</code> &gt; <code>end_server.sh</code> 실행</li><li>백엔드 리빌드: <code>[scripts]</code> &gt; <code>[linux]</code> &gt; <code>backend_rebuild.sh</code> 실행</li></ul></li></ul></li><li>웹 브라우저 접속</li></ol><p><img src="/images/docker-local-development-test/docker-local-development-test3.png"></p>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Server/">Server</category>
      
      <category domain="https://woonyzzang.github.com/categories/Server/Docker/">Docker</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/docker/">docker</category>
      
      
      <comments>https://woonyzzang.github.com/2023/08/22/docker-local-development-test/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>AES 암복호화</title>
      <link>https://woonyzzang.github.com/2023/04/05/node-aes-encryption-decryption/</link>
      <guid>https://woonyzzang.github.com/2023/04/05/node-aes-encryption-decryption/</guid>
      <pubDate>Wed, 05 Apr 2023 01:41:03 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;대상-언어-플랫폼&quot;&gt;&lt;a href=&quot;#대상-언어-플랫폼&quot; class=&quot;headerlink&quot; title=&quot;대상 언어 플랫폼&quot;&gt;&lt;/a&gt;대상 언어 플랫폼&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Net, Java, Node, C++&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 </description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="대상-언어-플랫폼"><a href="#대상-언어-플랫폼" class="headerlink" title="대상 언어 플랫폼"></a>대상 언어 플랫폼</h3><ul><li>Net, Java, Node, C++</li></ul><h3 id="암복호화-기준"><a href="#암복호화-기준" class="headerlink" title="암복호화 기준"></a>암복호화 기준</h3><p><strong>AES</strong></p><ul><li>BlockSize: 128 bits</li><li>KeySize: 256 bits</li><li>Key: PBKDF2 로 생성된 Key</li><li>암호화 시 IV: 랜덤 16바이트</li><li>복호화 시 IV: 암호화 된 문자열을 Base64로 인코딩한 바이트 시퀀스의 앞 16자리</li><li>Padding: PKCS7</li><li>작업모드: CBC</li><li>암호화 결과: IV(16바이트)에 암호화된 바이트 시퀀스가 합쳐진 값이 base-64로 디코딩 된 문자열</li></ul><p><strong>key 생성 알고리즘</strong></p><ul><li>PBKDF2 사용<ul><li><a href="https://en.wikipedia.org/wiki/PBKDF2">PBKDF2</a></li><li><a href="https://www.rfc-editor.org/rfc/rfc2898.txt">https://www.rfc-editor.org/rfc/rfc2898.txt</a></li></ul></li><li>Password : 지정된 암호</li><li>Salt : 암호를 UTF8로 인코딩한 바이트 시퀀스를 SHA256으로 해시한 바이트 시퀀스</li><li>Iteration Count : 1000</li><li>해시 알고리즘 : SHA1<ul><li>SHA1은 보안상 위험하나 .Net std 2.0에서는 SHA1만 지원하기 때문에 SHA1을 사용</li><li>MS에서는 보안문제로 SHA1보다는 SHA256이상을 권고</li><li>.Net std 2.0 상위 버전에서는 SHA256 사용 가능</li></ul></li></ul><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><p><strong>- 암호화 (ENCRYPT)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Rijndael</span> = <span class="built_in">require</span>(<span class="string">&#x27;rijndael-js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> padder = <span class="built_in">require</span>(<span class="string">&#x27;pkcs7-padding&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> plainText = <span class="string">&#x27;평문 문자열&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> password = <span class="string">&#x27;지정된 암호&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> salt = crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;sha256&#x27;</span>).<span class="title function_">update</span>(<span class="title class_">Buffer</span>.<span class="title function_">from</span>(password)).<span class="title function_">digest</span>();</span><br><span class="line"><span class="keyword">const</span> key = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  crypto.<span class="title function_">pbkdf2</span>(password, salt, <span class="number">1000</span>, <span class="number">32</span>, <span class="string">&#x27;sha1&#x27;</span>, <span class="function">(<span class="params">err, derivedKey</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123; <span class="keyword">throw</span> err; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">resolve</span>(derivedKey);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">shuffle</span> = (<span class="params">arr</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> x, t, r = <span class="keyword">new</span> <span class="title class_">Uint32Array</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, c = arr.<span class="property">length</span> - <span class="number">1</span>, m = arr.<span class="property">length</span>; i &lt; c; i++, m--) &#123;</span><br><span class="line">    crypto.<span class="property">webcrypto</span>.<span class="title function_">getRandomValues</span>(r);</span><br><span class="line"></span><br><span class="line">    x = <span class="title class_">Math</span>.<span class="title function_">floor</span>((r / <span class="number">65536</span> / <span class="number">65536</span>) * m) + i;</span><br><span class="line">    (t = arr[i]), (arr[i] = arr[x]), (arr[x] = t);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> iv = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="title function_">shuffle</span>([...plainText]).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)).<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rijndael = <span class="keyword">new</span> <span class="title class_">Rijndael</span>(key, <span class="string">&#x27;cbc&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> padded = padder.<span class="title function_">pad</span>(plainText, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">const</span> encrypted = rijndael.<span class="title function_">encrypt</span>(padded, <span class="string">&#x27;128&#x27;</span>, iv);</span><br><span class="line"><span class="keyword">const</span> ciphertext = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([iv, <span class="title class_">Buffer</span>.<span class="title function_">from</span>(encrypted)]).<span class="title function_">toString</span>(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ciphertext); </span><br></pre></td></tr></table></figure><p><strong>- 복호화 (DECRYPT)</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Rijndael</span> = <span class="built_in">require</span>(<span class="string">&#x27;rijndael-js&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> padder = <span class="built_in">require</span>(<span class="string">&#x27;pkcs7-padding&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cipherText = <span class="string">&#x27;암호화 된 문자열&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> password = <span class="string">&#x27;지정된 암호&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> salt = crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;sha256&#x27;</span>).<span class="title function_">update</span>(<span class="title class_">Buffer</span>.<span class="title function_">from</span>(password)).<span class="title function_">digest</span>();</span><br><span class="line"><span class="keyword">const</span> key = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  crypto.<span class="title function_">pbkdf2</span>(password, salt, <span class="number">1000</span>, <span class="number">32</span>, <span class="string">&#x27;sha1&#x27;</span>, <span class="function">(<span class="params">err, derivedKey</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123; <span class="keyword">throw</span> err; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">resolve</span>(derivedKey);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ivAndEncrypted = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(cipherText, <span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> iv = ivAndEncrypted.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line"><span class="keyword">const</span> encrypted = ivAndEncrypted.<span class="title function_">slice</span>(<span class="number">16</span>, ivAndEncrypted.<span class="property">byteLength</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rijndael = <span class="keyword">new</span> <span class="title class_">Rijndael</span>(key, <span class="string">&#x27;cbc&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> decrypted = rijndael.<span class="title function_">decrypt</span>(encrypted, <span class="string">&#x27;128&#x27;</span>, iv);</span><br><span class="line"><span class="keyword">const</span> decryptedPadded = padder.<span class="title function_">unpad</span>(decrypted, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">const</span> plaintext = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(decryptedPadded.<span class="title function_">filter</span>(<span class="function">(<span class="params">buf</span>) =&gt;</span> buf &gt; <span class="number">11</span>)).<span class="title function_">toString</span>(<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(plaintext);</span><br></pre></td></tr></table></figure><p>아래 제공된 비밀번호와 원본 문자열로 Node로 암호화 된 문자열을 다른 언어의 AES로 복호화가 되는지 검증 할 수 있다.</p><ul><li>원본 문자열: 123Apple.456TENET@Node</li><li>암호: <a href="mailto:&#80;&#x40;&#115;&#x73;&#119;&#48;&#114;&#100;&#x2e;&#x4e;&#x6f;&#x64;&#x65;">&#80;&#x40;&#115;&#x73;&#119;&#48;&#114;&#100;&#x2e;&#x4e;&#x6f;&#x64;&#x65;</a></li><li>암호화 된 문자열: NVRONGwzRUUuQVQyZG9AZVawSBA0&#x2F;3VPmOnljnL+5HhOariKM5KGZwJbe3Zi48ca</li></ul>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Backend/">Backend</category>
      
      <category domain="https://woonyzzang.github.com/categories/Backend/Node/">Node</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/node/">node</category>
      
      
      <comments>https://woonyzzang.github.com/2023/04/05/node-aes-encryption-decryption/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DevOps Azure VM 이프라인 CI/CD 구성</title>
      <link>https://woonyzzang.github.com/2023/01/12/devops-pipeline-azure-vm/</link>
      <guid>https://woonyzzang.github.com/2023/01/12/devops-pipeline-azure-vm/</guid>
      <pubDate>Thu, 12 Jan 2023 02:15:19 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;1-Azure-VM-에-대한-빌드-구성&quot;&gt;&lt;a href=&quot;#1-Azure-VM-에-대한-빌드-구성&quot; class=&quot;headerlink&quot; title=&quot;1. Azure VM 에 대한 빌드 구성&quot;&gt;&lt;/a&gt;1. Azure VM 에 대한 빌드 구성</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="1-Azure-VM-에-대한-빌드-구성"><a href="#1-Azure-VM-에-대한-빌드-구성" class="headerlink" title="1. Azure VM 에 대한 빌드 구성"></a>1. Azure VM 에 대한 빌드 구성</h3><p><strong>[DevOps CI] - azure-pipelines.yml</strong></p><ul><li>빌드 파이프라인에서는 nuxt build 시 생성되는 client와 server 리소스를 각각 분리하여 Artifact에 저장</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## [CDN STATIC]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">CopyFiles@2</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">Contents:</span> <span class="string">&#x27;.nuxt/dist/client/**&#x27;</span></span><br><span class="line">    <span class="attr">TargetFolder:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)&#x27;</span></span><br><span class="line">    <span class="attr">CleanTargetFolder:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Copy Files to: $(Build.ArtifactStagingDirectory)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">ArchiveFiles@2</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">rootFolderOrFile:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)/.nuxt/dist&#x27;</span></span><br><span class="line">    <span class="attr">includeRootFolder:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">archiveFile:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)/$(clientName).zip&#x27;</span></span><br><span class="line">    <span class="attr">replaceExistingArchive:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Archive Files&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">PublishBuildArtifacts@1</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">pathToPublish:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)/$(clientName).zip&#x27;</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Publish Artifact: drop&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## [NODE SERVER]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">CopyFiles@2</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">Contents:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      .nuxt/dist/server/**</span></span><br><span class="line"><span class="string">      server-middleware/**</span></span><br><span class="line"><span class="string">      static/**</span></span><br><span class="line"><span class="string">      node_modules/**</span></span><br><span class="line"><span class="string">      nuxt.config.ts</span></span><br><span class="line"><span class="string">      package.json</span></span><br><span class="line"><span class="string"></span>    <span class="attr">TargetFolder:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)&#x27;</span></span><br><span class="line">    <span class="attr">CleanTargetFolder:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Copy Files to: $(Build.ArtifactStagingDirectory)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">ArchiveFiles@2</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">rootFolderOrFile:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)&#x27;</span></span><br><span class="line">    <span class="attr">includeRootFolder:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">archiveFile:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)/$(serverName).zip&#x27;</span></span><br><span class="line">    <span class="attr">replaceExistingArchive:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Archive Files&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">PublishBuildArtifacts@1</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">pathToPublish:</span> <span class="string">&#x27;$(Build.ArtifactStagingDirectory)/$(serverName).zip&#x27;</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Publish Artifact: drop&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>배포 파이프라인에서 client 리소스는 blob storage로 Azure Copy하고, server 리소스는 Azure Web App으로 배포하여 서비스 가능.</li></ul><p><strong>[DevOps CD]</strong></p><p><img src="/images/devops-pipeline-azure-vm/devops-pipeline-azure-vm1.png"></p><p><img src="/images/devops-pipeline-azure-vm/devops-pipeline-azure-vm2.png"></p><p><img src="/images/devops-pipeline-azure-vm/devops-pipeline-azure-vm3.png"></p>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Server/">Server</category>
      
      <category domain="https://woonyzzang.github.com/categories/Server/Azure/">Azure</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/azure/">azure</category>
      
      <category domain="https://woonyzzang.github.com/tags/devops/">devops</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/12/devops-pipeline-azure-vm/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Teams 채널 커넥터 연동</title>
      <link>https://woonyzzang.github.com/2023/01/11/teams-notify-connector/</link>
      <guid>https://woonyzzang.github.com/2023/01/11/teams-notify-connector/</guid>
      <pubDate>Wed, 11 Jan 2023 03:34:05 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;1-Git-팀즈-연동-설정&quot;&gt;&lt;a href=&quot;#1-Git-팀즈-연동-설정&quot; class=&quot;headerlink&quot; title=&quot;1. Git 팀즈 연동 설정&quot;&gt;&lt;/a&gt;1. Git 팀즈 연동 설정&lt;/h3&gt;&lt;p&gt;GitHub Enterprise 커넥</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="1-Git-팀즈-연동-설정"><a href="#1-Git-팀즈-연동-설정" class="headerlink" title="1. Git 팀즈 연동 설정"></a>1. Git 팀즈 연동 설정</h3><p>GitHub Enterprise 커넥터 구성 생성</p><ul><li>이름*:<ul><li>&lt;Git 저장소 URL&gt;</li></ul></li></ul><p><code>Webhook URL</code> 을 복사 후 저장소 웹훅 설정에 추가한다.</p><p>다음 GitHub Enterprise 이벤트에 대해 자동 알림 받을 수 있다.</p><ul><li>Issues</li><li>Pull request</li><li>Push</li><li>Issue comment</li><li>Commit comment</li><li>Pull request review comment</li></ul><h3 id="저장소-설정"><a href="#저장소-설정" class="headerlink" title="저장소 설정"></a>저장소 설정</h3><p>GitHub Enterprise</p><p><code>settings &gt; Hooks</code> 메뉴의 들어가서 <code>Add webhook</code> 버튼을 클릭한다.</p><ul><li>Payload URL:<ul><li>ex) <a href="https://exsample.com/postreceive">https://exsample.com/postreceive</a></li></ul></li><li>Content type:<ul><li>application&#x2F;json</li></ul></li><li>SSL verification:<ul><li>Disabled (not recommended)</li></ul></li></ul><p><img src="/images/teams-notify-connector/teams-notify-connector1.png"></p>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Tools/">Tools</category>
      
      <category domain="https://woonyzzang.github.com/categories/Tools/Teams/">Teams</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/teams/">teams</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/11/teams-notify-connector/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Vim 명령어 요약</title>
      <link>https://woonyzzang.github.com/2023/01/05/vim-command/</link>
      <guid>https://woonyzzang.github.com/2023/01/05/vim-command/</guid>
      <pubDate>Thu, 05 Jan 2023 06:33:32 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Vim-명령어&quot;&gt;&lt;a href=&quot;#Vim-명령어&quot; class=&quot;headerlink&quot; title=&quot;[Vim] 명령어&quot;&gt;&lt;/a&gt;[Vim] 명령어&lt;/h3&gt;&lt;p&gt;브램 물레나르(Bram Moolenaar)가 만든 명령어 라인 사용자 인터페이스(C</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Vim-명령어"><a href="#Vim-명령어" class="headerlink" title="[Vim] 명령어"></a>[Vim] 명령어</h3><p>브램 물레나르(Bram Moolenaar)가 만든 명령어 라인 사용자 인터페이스(CUI) 기반의 vi 호환 텍스트 편집기다.</p><p>현재 윈도우, 리눅스, OS X를 비롯한 크로스 플랫폼 운영체제 환경을 지원하며 vi와 호환되면서 독자적으로 다양한 기능을 추가한 vi 의 개선형 버전이다.<br>Vim 스크립트를 통해 자유롭게 사용환경을 변경하거나 확장된 정규표현 문법, 다국어 지원, 문법 검사와 강조 기능, 플러그인을 통한 확장성 등 사용자에게 편의를 제공한다.</p><h3 id="IDE-에디터-플러그인"><a href="#IDE-에디터-플러그인" class="headerlink" title="IDE 에디터 플러그인"></a>IDE 에디터 플러그인</h3><ul><li>IntelliJ<ul><li><code>IdeaVim</code> 설치</li></ul></li><li>VisualStudioCode<ul><li><code>Vim</code> 설치</li></ul></li></ul><hr><p><strong>종료 옵션</strong></p><ul><li><code>:q</code> - 그냥 종료</li><li><code>:q!</code> - 강제 종료</li><li><code>:w</code> - 저장</li><li><code>:w!</code> - 강제 저장</li><li><code>:wq</code> - 저장하고 종료</li><li><code>:wq!</code> - 강제 저장하고 종료</li></ul><p><strong>명령어 모드 <code>esc</code></strong></p><ul><li><code>esc</code> - 명령 모드로 변경</li><li><code>i</code> - insert (커서 앞)</li><li><code>a</code> - append (커서 뒤)</li><li><code>I</code> - 문장 시작</li><li><code>A</code> - 문장 끝</li></ul><p><strong>입력 모드 <code>i</code></strong></p><ul><li><code>esc</code> - 명령 모드로 변경</li><li><code>i</code> - insert (커서 앞)</li><li><code>a</code> - append (커서 뒤)</li><li><code>I</code> - 문장 시작</li><li><code>A</code> - 문장 끝</li></ul><p><strong>네비게이션 ( 방향키 ): <code>명령어 모드에서 사용</code></strong></p><ul><li><code>h</code> - 왼쪽 이동</li><li><code>j</code> - 아래 이동</li><li><code>k</code> - 위로 이동</li><li><code>l</code> - 오른쪽 이동</li><li><code>H</code> - 화면 위</li><li><code>M</code> - 화면 중간</li><li><code>L</code> - 화면 끝</li><li><code>0(숫자)</code> - 문장 앞으로 이동</li><li><code>$</code> - 문장 뒤로 이동</li><li><code>w</code> - word 단어 단위로 이동<ul><li><code>(숫자)w</code> - (숫자) 단어씩 이동<ul><li>ex ) <code>3w</code> - 3단어씩 이동</li></ul></li></ul></li><li><code>b</code> - backword 단어 단위로 이동</li><li><code>gg</code> - 파일 앞 (소스코드 최상위) 이동</li><li><code>G</code> - 파일 끝 (소스코드 최하단) 이동<ul><li><code>(숫자)G</code> - (숫자) 번째 줄로 이동<ul><li>ex) <code>20G</code> - 20번째 줄로 이동</li></ul></li></ul></li><li><code>ctrl + u</code> - 위로 스크롤링</li><li><code>ctrl + d</code> - 아래로 스크롤링</li><li><code>&#123;</code> - 문단 시작 이동</li><li><code>&#125;</code> - 문단 끝 이동</li></ul><p><strong>명령어 모드에서 글자 편집</strong></p><ul><li><code>x</code> - 커서 기준 다음 한글자 삭제</li><li><code>dd</code> - 문장 삭제</li><li><code>yy</code> - 문장 복사</li><li><code>p</code> - 붙여넣기</li><li><code>*p</code> - 클립보드 붙여넣기 (클립보드에 저장된 텍스트를 사용하려면 에디터 설정이 필요)<ul><li>VisualStudioCode &gt; settings.json<ul><li>“vim.useSystemClipboard”: true 설정 변경</li></ul></li></ul></li><li><code>.</code> - 이전 명령 반복</li><li><code>u</code> - 되감기</li><li><code>ctrl + R</code> - 앞 감기</li><li><code>v</code> - 텍스트 셀렉트</li><li><code>ctrl + v</code> - 블럭 단위로 텍스트 셀렉트 (멀티 셀렉트)</li><li><code>/</code> - 검색<ul><li><code>n</code> - 매칭 된 다음 단어로 이동</li></ul></li><li><code>?</code> - 검색<ul><li><code>n</code> - 매칭 된 이전 단어로 이동</li></ul></li></ul><h3 id="Command-Object-조합"><a href="#Command-Object-조합" class="headerlink" title="Command + Object 조합"></a>Command + Object 조합</h3><p><strong>Command (명령)</strong></p><ul><li><code>d</code> delete (cut)</li><li><code>y</code> yank (copy)</li><li><code>c</code> change</li><li>…</li></ul><p><strong>Object (무엇에게)</strong></p><ul><li><code>3w</code> - 커서 기준 뒤에 3 단어 삭제</li><li><code>3b</code> - 커서 기준 앞에 3 단어 삭제</li><li><code>aw</code> - 단어 하나 삭제</li><li><code>at</code> - 태그 전체 삭제</li><li><code>ap</code> - 문단 전체 삭제</li><li><code>as</code> - 한줄 삭제</li><li><code>it</code> - 태그 안에 텍스트 삭제</li><li>…</li></ul><p>ex)</p><ul><li><code>d3j</code> - 삭제 커서 기준 아래 3 줄</li><li><code>d3k</code> - 삭제 커서 기준 위에 3 줄</li><li><code>di&#123;</code> - 삭제 중괄호 안에 모든 텍스트</li><li><code>di(</code> - 삭제 소괄호 안에 모든 텍스트</li><li><code>da(</code> - 삭제 소괄호 포함한 안에 모든 텍스트</li><li><code>di&#39;</code> - 삭제 싱글쿼터 안에 모든 텍스트</li><li><code>da&#39;</code> - 삭제 싱글쿼터 포함한 안에 모든 텍스트</li><li><code>ci[</code> - 변경 대괄호 안에 텍스트 후 자동으로 입력모드로 변경</li><li><code>dt(</code> - 삭제 커서 기준 다음의 소괄호 있는 부분까지의 텍스트</li><li><code>df(</code> - 삭제 커서 기준 다음의 소괄호 포함 있는 부분까지의 텍스트</li><li><code>d/헬로</code> - 삭제 검색 단어 매칭된 ‘헬로’ 텍스트</li><li><code>vaw</code> - 셀렉트 단어 하나</li></ul><h3 id="vim-튜토리얼-문서-확인"><a href="#vim-튜토리얼-문서-확인" class="headerlink" title="vim 튜토리얼 문서 확인"></a>vim 튜토리얼 문서 확인</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vimtutor</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/OS/">OS</category>
      
      <category domain="https://woonyzzang.github.com/categories/OS/Linux/">Linux</category>
      
      <category domain="https://woonyzzang.github.com/categories/OS/Linux/Vim/">Vim</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/linux/">linux</category>
      
      <category domain="https://woonyzzang.github.com/tags/vim/">vim</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/05/vim-command/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>nuxt2</title>
      <link>https://woonyzzang.github.com/2023/01/04/nuxt2/</link>
      <guid>https://woonyzzang.github.com/2023/01/04/nuxt2/</guid>
      <pubDate>Wed, 04 Jan 2023 01:28:41 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Nuxt-js&quot;&gt;&lt;a href=&quot;#Nuxt-js&quot; class=&quot;headerlink&quot; title=&quot;Nuxt.js&quot;&gt;&lt;/a&gt;Nuxt.js&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nuxtjs.org/docs/directory-s</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Nuxt-js"><a href="#Nuxt-js" class="headerlink" title="Nuxt.js"></a>Nuxt.js</h3><ul><li><a href="https://nuxtjs.org/docs/directory-structure/nuxt-config/">Nuxt configuration file</a></li></ul><h3 id="SSR-Universal-vs-SPA-vs-SSG"><a href="#SSR-Universal-vs-SPA-vs-SSG" class="headerlink" title="SSR (Universal) vs SPA vs SSG"></a>SSR (Universal) vs SPA vs SSG</h3><table><thead><tr><th>-</th><th>SSR</th><th>SPA</th><th>SSG</th></tr></thead><tbody><tr><td>모드 (config)</td><td>ssr: true (universal)</td><td>ssr: fasle (spa)</td><td>target: ‘static’</td></tr><tr><td>서버 유&#x2F;무</td><td>포함 (node.js 필요)</td><td>포함 (node.js 필요)</td><td></td></tr><tr><td>SEO</td><td>최적화</td><td>불가</td><td>최적화</td></tr><tr><td>빌드 생성 방식</td><td>npm run build</td><td>npm run build</td><td>npm run generate</td></tr></tbody></table><ul><li>SSR (universal) 모드:<ul><li>ssr: true 로 설정하면 ssr 모드로 동작</li><li>페이지 첫 접근 시 SSR 렌더링 되고, 페이지 간 이동은 CSR 로 진행 된다.</li><li>SEO 최적화</li></ul></li><li>SPA 모드:<ul><li>ssr: false 로 설정하면 spa 모드로 동작</li><li>CSR 로 렌더링</li><li>SEO 불가</li></ul></li><li>SSG 모드:<ul><li>target: ‘server’ 로 설정 하면 런타임 때 요청에 맞춰 정적 html 렌더링</li><li>target: ‘static’ 으로 설정 하면 사용자가 요청 하기 전 빌드 시점에 미리 정적 html 만들어 렌더링</li><li>SEO 최적화</li><li>동적 url 처리 등은 불가 하며 단순 정적 페이지 같은 경우에 적합</li><li>MPA + SSG 조합 hybrid 방식 개발 가능</li></ul></li></ul><blockquote><p>Nuxt 도입을 고려해야 할 때 하나의 프레임워크로 SSR, SPA, SSG 선택 개발이 가능하다라고 접근해야지, 추후 모드만 변경한다고 해서 Nuxt 가 모든걸 알아서 SSR, SPA, SSG 빌드 처리를 완벽하게 지원 한다라고 생각하면 안된다. (단적인 예로 SSR 모드 기준으로 개발을 진행하다가 도중 SPA 모드로 변경 시 SSR에서만 사용되는 특정 라이프 사이클 메서드 부분에서 에러가 발생 될 수 있다.)</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Backend/">Backend</category>
      
      <category domain="https://woonyzzang.github.com/categories/Backend/Nuxt/">Nuxt</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/spa/">spa</category>
      
      <category domain="https://woonyzzang.github.com/tags/nuxt2/">nuxt2</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/04/nuxt2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DevOps Azure Static Web App 파이프라인 CI/CD 구성</title>
      <link>https://woonyzzang.github.com/2023/01/03/devops-pipeline-azure-static-web-app/</link>
      <guid>https://woonyzzang.github.com/2023/01/03/devops-pipeline-azure-static-web-app/</guid>
      <pubDate>Tue, 03 Jan 2023 12:30:06 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;1-Azure-정적-Web-Apps-에-대한-빌드-구성&quot;&gt;&lt;a href=&quot;#1-Azure-정적-Web-Apps-에-대한-빌드-구성&quot; class=&quot;headerlink&quot; title=&quot;1. Azure 정적 Web Apps 에 대한 빌드 구성&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="1-Azure-정적-Web-Apps-에-대한-빌드-구성"><a href="#1-Azure-정적-Web-Apps-에-대한-빌드-구성" class="headerlink" title="1. Azure 정적 Web Apps 에 대한 빌드 구성"></a>1. Azure 정적 Web Apps 에 대한 빌드 구성</h3><ul><li><a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/publish-devops">빠른 시작: 첫 번째 정적 웹앱 빌드</a></li><li><a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/build-configuration?WT.mc_id=modinfra-30818-salean&irgwc=1&OCID=AID2200057_aff_7593_1243925&tduid=(ir__q9y3rizdugkf61fboq3aidg6o22xodgzpbn6glw000)(7593)(1243925)(je6NUbpObpQ-TLwnucXM33u6e7Hok8N1nA)()&irclickid=_q9y3rizdugkf61fboq3aidg6o22xodgzpbn6glw000&tabs=github-actions#skip-building-front-end-app&ranMID=24542&ranEAID=je6NUbpObpQ&ranSiteID=je6NUbpObpQ-TLwnucXM33u6e7Hok8N1nA&epi=je6NUbpObpQ-TLwnucXM33u6e7Hok8N1nA">Azure Static Web Apps에 대한 빌드 구성</a></li></ul><p><strong>[DevOps CI] - azure-pipelines.yml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Starter pipeline</span></span><br><span class="line"><span class="comment"># Start with a minimal pipeline that you can customize to build and deploy your code.</span></span><br><span class="line"><span class="comment"># Add steps that build, run tests, deploy, and more:</span></span><br><span class="line"><span class="comment"># https://aka.ms/yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">trigger:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pool:</span></span><br><span class="line">  <span class="attr">vmImage:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">task:</span> <span class="string">NodeTool@0</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">versionSpec:</span> <span class="string">&#x27;16.x&#x27;</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Install Node.js&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">script:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    npm install</span></span><br><span class="line"><span class="string">    npm run build:local</span></span><br><span class="line"><span class="string"></span>  <span class="attr">displayName:</span> <span class="string">&#x27;npm install and build&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">bash:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    echo &quot;--------------------&quot;</span></span><br><span class="line"><span class="string">    pwd</span></span><br><span class="line"><span class="string">    ls -al</span></span><br><span class="line"><span class="string">    echo &quot;--------------------&quot;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">displayName:</span> <span class="string">&#x27;Bash Script&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">task:</span> <span class="string">ArchiveFiles@2</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">rootFolderOrFile:</span> <span class="string">&#x27;.&#x27;</span></span><br><span class="line">    <span class="attr">includeRootFolder:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">verbose:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Archive Files&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">task:</span> <span class="string">PublishBuildArtifacts@1</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">&#x27;Publish Artifacts&#x27;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">#- task: AzureStaticWebApp@0</span></span><br><span class="line">  <span class="comment"># inputs:</span></span><br><span class="line">  <span class="comment"># app_location: &#x27;/build&#x27;</span></span><br><span class="line">  <span class="comment"># #output_location: &#x27;/dist&#x27;</span></span><br><span class="line">  <span class="comment"># #api_location: &#x27;api&#x27;</span></span><br><span class="line">  <span class="comment"># azure_static_web_apps_api_token: $(deploy_token)</span></span><br></pre></td></tr></table></figure><p><strong>[DevOps CD] - [TEST] StaticWebApp-Test</strong></p><p><img src="/images/devops-pipeline-azure-static-web-app/devops-pipeline-azure-static-web-app1.png" alt="Azure Static Web Apps CD 파이프라인"></p><h3 id="2-폴백-라우터-설정"><a href="#2-폴백-라우터-설정" class="headerlink" title="2. 폴백 라우터 설정"></a>2. 폴백 라우터 설정</h3><p>SPA 브라우저 라우터 사용 시 hash 기반이 아닌 history 기반으로 설정하고 페이지 이동 후 새로고침을 하게되면 404 Not Found 페이지를 반환하게 된다.</p><ul><li><a href="https://docs.microsoft.com/en-us/azure/static-web-apps/configuration#fallback-routes">Configure Azure Static Web Apps</a></li></ul><p><img src="/images/devops-pipeline-azure-static-web-app/devops-pipeline-azure-static-web-app2.png"></p><p>빌드되는 산출물에 Azure Static Web Apps 에서 정의되어 있는 staticwebapp.config.json 파일 생성 후 설정하는 코드를 추가한 후 배포해야 함.</p><p><strong>staticwebapp.config.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;navigationFallback&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rewrite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/index.html&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-빌드-산출물-사이즈-확인"><a href="#3-빌드-산출물-사이즈-확인" class="headerlink" title="3. 빌드 산출물 사이즈 확인"></a>3. 빌드 산출물 사이즈 확인</h3><ul><li><a href="https://www.techielass.com/tips-for-using-azure-static-web-apps/">Tips for using Azure Static Web Apps</a></li></ul><p><img src="/images/devops-pipeline-azure-static-web-app/devops-pipeline-azure-static-web-app3.png"></p><p>Azure Web Apps 은 관리자 사이트가 있는 반면에 Azure Static Web Apps 는 별도로 관리자 사이트 같은 부분은 제공하지는 않는거 같음. (로컬환경이나 데브옵스 로그에서 확인가능하긴 함.)</p><h3 id="4-Rest-API-연동-테스트"><a href="#4-Rest-API-연동-테스트" class="headerlink" title="4.Rest API 연동 테스트"></a>4.Rest API 연동 테스트</h3><ul><li>Azure Static Web Apps -&gt; Function App (MS 권고 방법 backend)</li><li>Azure Static Web Apps -&gt; VM (현재 사용중인 backend 방법)</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// CORS 설정</span><br><span class="line">http://localhost:3202,http://localhost:8080,http://*.winjoygame.com,https://*.winjoygame.com,vue-azure-static-web-app</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Server/">Server</category>
      
      <category domain="https://woonyzzang.github.com/categories/Server/Azure/">Azure</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/azure/">azure</category>
      
      <category domain="https://woonyzzang.github.com/tags/devops/">devops</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/03/devops-pipeline-azure-static-web-app/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Azure Static Web App</title>
      <link>https://woonyzzang.github.com/2023/01/03/azure-static-web-app/</link>
      <guid>https://woonyzzang.github.com/2023/01/03/azure-static-web-app/</guid>
      <pubDate>Tue, 03 Jan 2023 12:06:56 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Azure-Static-Web-App-서비스&quot;&gt;&lt;a href=&quot;#Azure-Static-Web-App-서비스&quot; class=&quot;headerlink&quot; title=&quot;Azure Static Web App 서비스&quot;&gt;&lt;/a&gt;Azure Static W</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Azure-Static-Web-App-서비스"><a href="#Azure-Static-Web-App-서비스" class="headerlink" title="Azure Static Web App 서비스"></a>Azure Static Web App 서비스</h3><ul><li>Azure 에서 정적 컨텐츠 (js, css, images) 들을 호스팅 할 수 있는 Pass 서비스</li><li>서버 사이드 렌더링이 필요하지 않는 CSR 이 가능한 Angular, React, Svelte, Vue 또는 blazor 같은 라이브러리와 프레임워크를 사용하여 빌드</li><li>Azure Functions 를 통하여 API 를 제공 받을 수 있다.</li><li>Azure Web App 과 같이 배포, 무료 SSL, CORS 및 보안 서비스 등을 Azure 에서 관리하는 형태로 제공한다.</li><li>주요 기능<ul><li>HTML, CSS, JavaScript 및 이미지와 같은 정적 컨텐츠에 대한 호스팅</li><li>자동으로 갱신되는 무료 SSL 인증서</li><li>CORS 구성이 필요 없는 API 를 호출할 때 역방향 프록시를 사용하는 원할한 보안 모델</li><li>Github 및 Azure DevOps 와 통합되는 쉬운 배포</li><li>보안</li><li>배포 슬롯 (무중단 배포 및 테스트 환경 제공)</li></ul></li></ul><h3 id="Static-Web-Apps로-수행할-수-있는-작업"><a href="#Static-Web-Apps로-수행할-수-있는-작업" class="headerlink" title="Static Web Apps로 수행할 수 있는 작업"></a>Static Web Apps로 수행할 수 있는 작업</h3><ul><li>Azure Functions 백 엔드를 통해WebAssembly 애플리케이션을 만드는 <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/getting-started?tabs=angular">Angular</a>, <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/getting-started?tabs=react">React</a>, <a href="https://docs.microsoft.com/ko-kr/learn/modules/publish-app-service-static-web-app-api/">Svelte</a>, <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/getting-started?tabs=vue">Vue</a>, <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/deploy-blazor">Blazor</a> 같은 JavaScript 프레임워크와 라이브러리를 사용하여 최신 웹 애플리케이션을 빌드 한다.</li><li><a href="https://learn.microsoft.com/ko-kr/azure/static-web-apps/publish-gatsby">Gatsby</a>, <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/publish-hugo">Hugo</a>, <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/publish-vuepress">VuePress</a> 와 같은 프레임워크를 사용하여 정적 사이트를 게시 합니다.</li><li><a href="https://learn.microsoft.com/ko-kr/azure/static-web-apps/nextjs">Next.js</a> 및 <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/deploy-nuxtjs">Nuxt.js</a> 와 같은 프레임워크를 사용하여 웹 애플리케이션 을 배포합니다.<ul><li><u>웹 어플리케이션 배포란 서버렌더링 (SSR) 지원이 아닌 제너레이터 (SSG) 로 의해 빌드된 정적 파일들을 의미함.</u></li></ul></li></ul><h2 id="Azure-Static-Web-Apps의-할당량"><a href="#Azure-Static-Web-Apps의-할당량" class="headerlink" title="Azure Static Web Apps의 할당량"></a>Azure Static Web Apps의 할당량</h2><ul><li><a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/quotas">Azure Static Web Apps의 할당량</a></li></ul><table><thead><tr><th>기능</th><th>무료 요금제</th><th>표준 계획</th></tr></thead><tbody><tr><td>포함된 대역폭</td><td>구독당 월 100GB</td><td>구독당 월 100GB</td></tr><tr><td>초과분 대역폭</td><td>사용할 수 없음</td><td>GB당 $0.20</td></tr><tr><td>Azure 구독당 앱</td><td>10</td><td>제한 없음</td></tr><tr><td>앱 크기</td><td>250MB</td><td>500MB</td></tr><tr><td>계획 크기</td><td>단일 배포의 경우 최대 앱 크기 500MB, 모든 준비 및 프로덕션 환경의 경우 최대 0.50GB</td><td>단일 배포의 경우 최대 500MB의 앱 크기, 모든 준비 및 프로덕션 환경에서 결합하여 최대 2.00GB</td></tr><tr><td>사전 프로덕션 환경</td><td>3</td><td>10</td></tr><tr><td>사용자 지정 도메인</td><td>앱당 2 개</td><td>앱당 5 개</td></tr><tr><td>권한 부여(기본 제공 역할)</td><td>기본 제공 <code>authenticated</code> 역할로 인증할 수 있는 무제한 최종 사용자</td><td>기본 제공 <code>authenticated</code> 역할로 인증할 수 있는 무제한 최종 사용자</td></tr><tr><td>권한 부여(사용자 지정 역할)</td><td>초대를 통해 사용자 지정 역할에 속할 수 있는 최대 25 명의 최종 사용자</td><td>초대를 통해 사용자 지정 역할에 속할 수 있는 최대 25 명의 최종 사용자 또는 서버리스 함수를 통해 사용자 지정 역할을 할당할 수 있는 무제한 최종 사용자</td></tr></tbody></table>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Server/">Server</category>
      
      <category domain="https://woonyzzang.github.com/categories/Server/Azure/">Azure</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/azure/">azure</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/03/azure-static-web-app/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Zendesk 라이브 테마 코드 편집</title>
      <link>https://woonyzzang.github.com/2023/01/03/zendesk-theme-live-edit/</link>
      <guid>https://woonyzzang.github.com/2023/01/03/zendesk-theme-live-edit/</guid>
      <pubDate>Tue, 03 Jan 2023 03:25:42 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;젠데스크-라이브-테마-코드-편집하기&quot;&gt;&lt;a href=&quot;#젠데스크-라이브-테마-코드-편집하기&quot; class=&quot;headerlink&quot; title=&quot;젠데스크 라이브 테마 코드 편집하기&quot;&gt;&lt;/a&gt;젠데스크 라이브 테마 코드 편집하기&lt;/h3&gt;&lt;ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="젠데스크-라이브-테마-코드-편집하기"><a href="#젠데스크-라이브-테마-코드-편집하기" class="headerlink" title="젠데스크 라이브 테마 코드 편집하기"></a>젠데스크 라이브 테마 코드 편집하기</h3><ul><li>Admin: <a href="https://www.zendesk.kr/login/#login">로그인</a><ul><li>젠데스크 관리자 계정 접근 권한 필요.</li></ul></li></ul><p><strong>1. 디자인 사용자 지정 메뉴 &gt; 사용자 지정 버튼 클릭</strong></p><p><img src="/images/zendesk-theme-live-edit/zendesk-theme-live-edit1.png" alt="라이브 테마 선택 화면"></p><p><strong>2. 디자인 사용자 지정 메뉴 &gt; 사용자 지정 버튼 클릭 &gt; 코드 편집 버튼 클릭</strong></p><p><img src="/images/zendesk-theme-live-edit/zendesk-theme-live-edit2.png" alt="테마 미리보기 화면"></p><p><strong>3.위지익 에디트 코드 편집 (게시버튼 클릭 시 라이브 반영)</strong></p><p><img src="/images/zendesk-theme-live-edit/zendesk-theme-live-edit3.png" alt="위지익 에디트 편집 화면"></p>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Backend/">Backend</category>
      
      <category domain="https://woonyzzang.github.com/categories/Backend/Zendesk/">Zendesk</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/zendesk/">zendesk</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/03/zendesk-theme-live-edit/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Azure VM</title>
      <link>https://woonyzzang.github.com/2023/01/03/azure-vm/</link>
      <guid>https://woonyzzang.github.com/2023/01/03/azure-vm/</guid>
      <pubDate>Tue, 03 Jan 2023 01:51:44 GMT</pubDate>
      
        
        
      <description>&lt;h3 id=&quot;Azure-VM-초기-셋팅&quot;&gt;&lt;a href=&quot;#Azure-VM-초기-셋팅&quot; class=&quot;headerlink&quot; title=&quot;Azure VM 초기 셋팅&quot;&gt;&lt;/a&gt;Azure VM 초기 셋팅&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VM: Linux - Cent</description>
        
      
      
      
      <content:encoded><![CDATA[<h3 id="Azure-VM-초기-셋팅"><a href="#Azure-VM-초기-셋팅" class="headerlink" title="Azure VM 초기 셋팅"></a>Azure VM 초기 셋팅</h3><ul><li>VM: Linux - Centos7 환경</li></ul><p><strong>yum 엡데이트</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum update</span><br></pre></td></tr></table></figure><hr><h3 id="Node-설치"><a href="#Node-설치" class="headerlink" title="Node 설치"></a>Node 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span><br></pre></td></tr></table></figure><ul><li><p><strong>bashrc 파일 수정</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/bashrc</span><br></pre></td></tr></table></figure></li><li><p><strong>코드 삽입</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot;</span><br></pre></td></tr></table></figure></li><li><p><strong>bashrc 업데이트 갱신</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p><strong>NPM 설치</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ nvm insatall --lts</span><br><span class="line">or</span><br><span class="line">$ nvm install 16.15.1</span><br></pre></td></tr></table></figure></li><li><p><strong>NPM 버전 기본 셋팅</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm <span class="built_in">alias</span> default 16.15.1</span><br></pre></td></tr></table></figure></li><li><p><strong>node 설치 확인 명령어</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ $ node -v</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/azure-vm/azure-vm1.png" alt="node 설치 확인"></p><hr><h3 id="Dotnet-Core-3-1-201-수동-설치"><a href="#Dotnet-Core-3-1-201-수동-설치" class="headerlink" title="Dotnet Core 3.1.201 수동 설치"></a><del>Dotnet Core 3.1.201 수동 설치</del></h3><ul><li>패키지 설치 필요 없는거 같음.</li></ul><hr><h3 id="libicu-패키지-설치"><a href="#libicu-패키지-설치" class="headerlink" title="libicu 패키지 설치"></a>libicu 패키지 설치</h3><ul><li><a href="https://docs.microsoft.com/ko-kr/dotnet/core/install/linux-centos#dependencies">CentOS Linux에 .NET 설치 - .NET</a></li><li>인프라 요청 &gt; <code>libicu</code> 패키지 다운로드 허용 문서 요청</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install libicu</span><br></pre></td></tr></table></figure><hr><h2 id="Azure-DevOps-Azagent-Registration-script-실행"><a href="#Azure-DevOps-Azagent-Registration-script-실행" class="headerlink" title="Azure DevOps &gt; Azagent (Registration script) 실행"></a>Azure DevOps &gt; Azagent (Registration script) 실행</h2><p>반드시 Azagent 리눅스용 Resistration script 실행 시 ‘libicu’ 의존성 패키지 설치가 되어 있어야 한다.</p><p><img src="/images/azure-vm/azure-vm2.png" alt="의존성 패키지 에러"></p><ul><li>[v] Personal Access Token 활성화 체크</li><li>Personal Access Token:</li></ul><p><img src="/images/azure-vm/azure-vm3.png" alt="Personal Access Token 생성"></p><p><img src="/images/azure-vm/azure-vm4.png" alt="Azagent 정상 설치 완료"></p><hr><h3 id="Azagent-프로세스-구동-확인"><a href="#Azagent-프로세스-구동-확인" class="headerlink" title="Azagent 프로세스 구동 확인"></a>Azagent 프로세스 구동 확인</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ps -e</span><br></pre></td></tr></table></figure><p><img src="/images/azure-vm/azure-vm5.png" alt="Azagent 프로세스 구동 확인"></p><hr><h3 id="웹서버-루트-폴더-셋팅"><a href="#웹서버-루트-폴더-셋팅" class="headerlink" title="웹서버 루트 폴더 셋팅"></a>웹서버 루트 폴더 셋팅</h3><ul><li>경로: &#x2F;home&#x2F;service_dev_ptltest</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">chmod</span> 755 wwwroot</span><br></pre></td></tr></table></figure><h2 id="PM2-셋팅"><a href="#PM2-셋팅" class="headerlink" title="PM2 셋팅"></a>PM2 셋팅</h2><ul><li>경로: &#x2F;home&#x2F;service_dev_ptltest</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 $ sudo <span class="built_in">chmod</span> 755 .pm</span><br><span class="line">2 $ sudo <span class="built_in">chown</span> service_dev_ptltest .pm</span><br><span class="line">3 $ sudo <span class="built_in">chgrp</span> wheel .pm</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://woonyzzang.github.com/categories/Server/">Server</category>
      
      <category domain="https://woonyzzang.github.com/categories/Server/Azure/">Azure</category>
      
      
      <category domain="https://woonyzzang.github.com/tags/azure/">azure</category>
      
      
      <comments>https://woonyzzang.github.com/2023/01/03/azure-vm/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
